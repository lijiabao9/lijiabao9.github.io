[{"title":"Butterfly 标签外挂语法","url":"/posts/54e68d5e.html","content":"Butterfly 主题强大的标签外挂功能，能够为 Hexo 博客内容带来丰富的排版样式和交互效果。\n本文将全面解析 Butterfly 标签外挂的使用方法。\n\n标签外挂是 Hexo 独有的功能，并不是标准的 Markdown 格式。\n以下的写法，只适用于 Butterfly 主题，用在其他主题上不会有效果，甚至可能会报错，使用前请留意。\n\n官方文档请看 Butterfly 文档(四) 标签外挂\n\n颜色可以选择：RGB\\PPO red green blue pink purple orange\n标识可以选择： 不填 / default primary info success warning danger\n\n\nnote-引用 通用配置 \n              \n              修改主题配置文件 _config.butterfly.yml，设置 note 标签的默认配置。_config.butterfly.yml# Note - Bootstrap Calloutnote:  # Note tag style values:  #  - simple    bs-callout old alert style. Default.  #  - modern    bs-callout new (v2-v3) alert style.  #  - flat      flat callout style with background, like on Mozilla or StackOverflow.  #  - disabled  disable all CSS styles import of note tag.  style: flat  icons: true  border_radius: 3  # Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).  # Offset also applied to label tag variables. This option can work with disabled note tag.  light_bg_offset: 0\n              \n            \n标识标签语法配置参数样式预览示例源码&#123;% note [class] [no-icon] [style] %&#125;Any content (support inline tags too.io).&#123;% endnote %&#125;\n\n\n\n参数\n用法\n\n\n\n\nclass\n【可选】标识，不同的标识有不同的配色 ( 留空 / default / primary / success / info / warning / danger )\n\n\nno-icon\n【可选】可配置 no-icon 去除图标\n\n\nstyle\n【可选】可以覆盖主题配置中的 style ( simple / modern / flat / disabled )\n\n\n\n simple 样式 \n              \n              默认 提示块标签default 提示块标签primary 提示块标签success 提示块标签info 提示块标签warning 提示块标签danger 提示块标签\n              \n            \n\n modern 样式 \n              \n              默认 提示块标签default 提示块标签primary 提示块标签success 提示块标签info 提示块标签warning 提示块标签danger 提示块标签\n              \n            \n\n flat 样式 \n              \n              默认 提示块标签default 提示块标签primary 提示块标签success 提示块标签info 提示块标签warning 提示块标签danger 提示块标签\n              \n            \n\n disabled 样式 \n              \n              默认 提示块标签default 提示块标签primary 提示块标签success 提示块标签info 提示块标签warning 提示块标签danger 提示块标签\n              \n            \n\n no-icon 样式 \n              \n              默认 提示块标签default 提示块标签primary 提示块标签success 提示块标签info 提示块标签warning 提示块标签danger 提示块标签\n              \n            simple样式&#123;% note simple %&#125;默认 提示块标签&#123;% endnote %&#125;&#123;% note default simple %&#125;default 提示块标签&#123;% endnote %&#125;&#123;% note primary simple %&#125;primary 提示块标签&#123;% endnote %&#125;&#123;% note success simple %&#125;success 提示块标签&#123;% endnote %&#125;&#123;% note info simple %&#125;info 提示块标签&#123;% endnote %&#125;&#123;% note warning simple %&#125;warning 提示块标签&#123;% endnote %&#125;&#123;% note danger simple %&#125;danger 提示块标签&#123;% endnote %&#125;\nmodern样式&#123;% note modern %&#125;默认 提示块标签&#123;% endnote %&#125;&#123;% note default modern %&#125;default 提示块标签&#123;% endnote %&#125;&#123;% note primary modern %&#125;primary 提示块标签&#123;% endnote %&#125;&#123;% note success modern %&#125;success 提示块标签&#123;% endnote %&#125;&#123;% note info modern %&#125;info 提示块标签&#123;% endnote %&#125;&#123;% note warning modern %&#125;warning 提示块标签&#123;% endnote %&#125;&#123;% note danger modern %&#125;danger 提示块标签&#123;% endnote %&#125;\nflat样式&#123;% note flat %&#125;默认 提示块标签&#123;% endnote %&#125;&#123;% note default flat %&#125;default 提示块标签&#123;% endnote %&#125;&#123;% note primary flat %&#125;primary 提示块标签&#123;% endnote %&#125;&#123;% note success flat %&#125;success 提示块标签&#123;% endnote %&#125;&#123;% note info flat %&#125;info 提示块标签&#123;% endnote %&#125;&#123;% note warning flat %&#125;warning 提示块标签&#123;% endnote %&#125;&#123;% note danger flat %&#125;danger 提示块标签&#123;% endnote %&#125;\ndisabled样式&#123;% note disabled %&#125;默认 提示块标签&#123;% endnote %&#125;&#123;% note default disabled %&#125;default 提示块标签&#123;% endnote %&#125;&#123;% note primary disabled %&#125;primary 提示块标签&#123;% endnote %&#125;&#123;% note success disabled %&#125;success 提示块标签&#123;% endnote %&#125;&#123;% note info disabled %&#125;info 提示块标签&#123;% endnote %&#125;&#123;% note warning disabled %&#125;warning 提示块标签&#123;% endnote %&#125;&#123;% note danger disabled %&#125;danger 提示块标签&#123;% endnote %&#125;\nno-icon样式&#123;% note no-icon %&#125;默认 提示块标签&#123;% endnote %&#125;&#123;% note default no-icon %&#125;default 提示块标签&#123;% endnote %&#125;&#123;% note primary no-icon %&#125;primary 提示块标签&#123;% endnote %&#125;&#123;% note success no-icon %&#125;success 提示块标签&#123;% endnote %&#125;&#123;% note info no-icon %&#125;info 提示块标签&#123;% endnote %&#125;&#123;% note warning no-icon %&#125;warning 提示块标签&#123;% endnote %&#125;&#123;% note danger no-icon %&#125;danger 提示块标签&#123;% endnote %&#125;\n自定义图标标签语法配置参数样式预览示例源码&#123;% note [color] [icon] [style] %&#125;Any content (support inline tags too.io).&#123;% endnote %&#125;\n\n\n\n参数\n用法\n\n\n\n\ncolor\n【可选】颜色 ( 留空 / blue / pink / red / purple / orange / green )\n\n\nicon\n【可选】可配置自定义 icon (只支持 fontawesome 图标, 也可以配置 no-icon)\n\n\nstyle\n【可选】可以覆盖主题配置中的 style ( simple / modern / flat / disabled )\n\n\n\n simple 样式 \n              \n              你是刷 Visa 还是 UnionPay2021年快到了….小心开车 安全至上这是三片呢？还是四片？你是刷 Visa 还是 UnionPay剪刀石头布前端最讨厌的浏览器\n              \n            \n\n modern 样式 \n              \n              你是刷 Visa 还是 UnionPay2021年快到了….小心开车 安全至上这是三片呢？还是四片？你是刷 Visa 还是 UnionPay剪刀石头布前端最讨厌的浏览器\n              \n            \n\n flat 样式 \n              \n              你是刷 Visa 还是 UnionPay2021年快到了….小心开车 安全至上这是三片呢？还是四片？你是刷 Visa 还是 UnionPay剪刀石头布前端最讨厌的浏览器\n              \n            \n\n disabled 样式 \n              \n              你是刷 Visa 还是 UnionPay2021年快到了….小心开车 安全至上这是三片呢？还是四片？你是刷 Visa 还是 UnionPay剪刀石头布前端最讨厌的浏览器\n              \n            \n\n no-icon 样式 \n              \n              你是刷 Visa 还是 UnionPay2021年快到了….小心开车 安全至上这是三片呢？还是四片？你是刷 Visa 还是 UnionPay剪刀石头布前端最讨厌的浏览器\n              \n            simple样式&#123;% note &#x27;fab fa-cc-visa&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;&#123;% note blue &#x27;fas fa-bullhorn&#x27; simple %&#125;2021年快到了....&#123;% endnote %&#125;&#123;% note pink &#x27;fas fa-car-crash&#x27; simple %&#125;小心开车 安全至上&#123;% endnote %&#125;&#123;% note red &#x27;fas fa-fan&#x27; simple%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;&#123;% note orange &#x27;fas fa-battery-half&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;&#123;% note purple &#x27;far fa-hand-scissors&#x27; simple %&#125;剪刀石头布&#123;% endnote %&#125;&#123;% note green &#x27;fab fa-internet-explorer&#x27; simple %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;\nmodern样式&#123;% note &#x27;fab fa-cc-visa&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern %&#125;2021年快到了....&#123;% endnote %&#125;&#123;% note pink &#x27;fas fa-car-crash&#x27; modern %&#125;小心开车 安全至上&#123;% endnote %&#125;&#123;% note red &#x27;fas fa-fan&#x27; modern%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;&#123;% note orange &#x27;fas fa-battery-half&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;&#123;% note purple &#x27;far fa-hand-scissors&#x27; modern %&#125;剪刀石头布&#123;% endnote %&#125;&#123;% note green &#x27;fab fa-internet-explorer&#x27; modern %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;\nflat样式&#123;% note &#x27;fab fa-cc-visa&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;&#123;% note blue &#x27;fas fa-bullhorn&#x27; flat %&#125;2021年快到了....&#123;% endnote %&#125;&#123;% note pink &#x27;fas fa-car-crash&#x27; flat %&#125;小心开车 安全至上&#123;% endnote %&#125;&#123;% note red &#x27;fas fa-fan&#x27; flat%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;&#123;% note orange &#x27;fas fa-battery-half&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;&#123;% note purple &#x27;far fa-hand-scissors&#x27; flat %&#125;剪刀石头布&#123;% endnote %&#125;&#123;% note green &#x27;fab fa-internet-explorer&#x27; flat %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;\ndisabled样式&#123;% note &#x27;fab fa-cc-visa&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;&#123;% note blue &#x27;fas fa-bullhorn&#x27; disabled %&#125;2021年快到了....&#123;% endnote %&#125;&#123;% note pink &#x27;fas fa-car-crash&#x27; disabled %&#125;小心开车 安全至上&#123;% endnote %&#125;&#123;% note red &#x27;fas fa-fan&#x27; disabled %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;&#123;% note orange &#x27;fas fa-battery-half&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;&#123;% note purple &#x27;far fa-hand-scissors&#x27; disabled %&#125;剪刀石头布&#123;% endnote %&#125;&#123;% note green &#x27;fab fa-internet-explorer&#x27; disabled %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;\nno-icon样式&#123;% note no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;&#123;% note blue no-icon %&#125;2021年快到了....&#123;% endnote %&#125;&#123;% note pink no-icon %&#125;小心开车 安全至上&#123;% endnote %&#125;&#123;% note red no-icon %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;&#123;% note orange no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;&#123;% note purple no-icon %&#125;剪刀石头布&#123;% endnote %&#125;&#123;% note green no-icon %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;\nlabel-背景高亮文字标签语法配置参数样式预览示例源码&#123;% label text color %&#125;\n\n\n\n参数\n用法\n\n\n\n\ntext\n文字\n\n\ncolor\n【可选】背景颜色，可填：留空 / blue / pink / red / purple / orange / green\n\n\n\n臣亮言：先帝创业未半，而中道崩殂。\n今天下三分，益州疲敝，此诚危急存亡之秋也！\n然侍卫之臣，不懈于内；忠志之士，忘身于外者，盖追先帝之殊遇，欲报之于陛下也。\n诚宜开张圣听，以光先帝遗德，恢弘志士之气；不宜妄自菲薄，引喻失义，以塞忠谏之路也。\n宫中、府中，俱为一体；陟罚臧否，不宜异同。\n若有作奸、犯科，及为忠善者，宜付有司，论其刑赏，以昭陛下平明之治；\n不宜偏私，使内外异法也。臣亮言：&#123;% label 先帝 %&#125;创业未半，而&#123;% label 中道崩殂 blue %&#125;。今天下三分，&#123;% label 益州疲敝 pink %&#125;，此诚&#123;% label 危急存亡之秋 red %&#125;也！然侍卫之臣，不懈于内；&#123;% label 忠志之士 purple %&#125;，忘身于外者，盖追先帝之殊遇，欲报之于陛下也。诚宜开张圣听，以光先帝遗德，恢弘志士之气；不宜妄自菲薄，引喻失义，以塞忠谏之路也。宫中、府中，俱为一体；陟罚臧否，不宜异同。若有&#123;% label 作奸 orange %&#125;、&#123;% label 犯科 green %&#125;，及为忠善者，宜付有司，论其刑赏，以昭陛下平明之治；不宜偏私，使内外异法也。\ntabs-分栏切换标签语法配置参数样式预览示例源码&#123;% tabs Unique-Name, [index] %&#125;&lt;!-- tab [Tab caption] [@icon] --&gt;Any content (support inline tags too).&lt;!-- endtab --&gt;&#123;% endtabs %&#125;\n\n\n\n参数\n用法\n\n\n\n\nUnique Name\ntabs 区块标签的 唯一名称，不包含逗号。将用于每个选项卡的 #id 前缀，并附加其索引号。若名称中有空格，生成 #id 时会将空格替换为短横线。仅对当前文章/页面的 URL 必须唯一！\n\n\n[index]\n【可选】活动选项卡的索引号。如果未指定，将选择第一个选项卡（ 1 ）。如果索引为 -1，则不会选择任何选项卡，类似于折叠内容。\n\n\n[Tab caption\n【可选】当前选项卡的 标题。如果未指定标题，将使用唯一名称和选项卡索引后缀作为选项卡标题。如果未指定标题，但指定了图标，标题将为空。\n\n\n[@icon]\n【可选】FontAwesome 图标名称（全名，如 ‘fas fa-font’）。可以有或没有空格；例如 ‘Tab caption @icon’ 与 ‘Tab caption@icon’ 类似。\n\n\n\n 预设选择第一个【默认】 \n              \n              王昭君 1王昭君 2王昭君 3This is Tab 1.This is Tab 2.This is Tab 3.\n              \n            \n 预设选择tabs \n              \n              西施 1西施 2西施 3This is Tab 1.This is Tab 2.This is Tab 3.\n              \n            \n 没有预设值 \n              \n              貂蝉 1貂蝉 2貂蝉 3This is Tab 1.This is Tab 2.This is Tab 3.\n              \n            \n 自定义Tab名 \n              \n              第一个Tab炸弹tab名字为第一个Tab只有图标 没有Tab名字名字+icon\n              \n            预设选择第一个【默认】&#123;% tabs 王昭君 %&#125;&lt;!-- tab --&gt;**This is Tab 1.**&lt;!-- endtab --&gt;&lt;!-- tab --&gt;**This is Tab 2.**&lt;!-- endtab --&gt;&lt;!-- tab --&gt;**This is Tab 3.**&lt;!-- endtab --&gt;&#123;% endtabs %&#125;\n预设选择tabs&#123;% tabs 西施, 3 %&#125;&lt;!-- tab --&gt;**This is Tab 1.**&lt;!-- endtab --&gt;&lt;!-- tab --&gt;**This is Tab 2.**&lt;!-- endtab --&gt;&lt;!-- tab --&gt;**This is Tab 3.**&lt;!-- endtab --&gt;&#123;% endtabs %&#125;\n没有预设值&#123;% tabs 貂蝉, -1 %&#125;&lt;!-- tab --&gt;**This is Tab 1.**&lt;!-- endtab --&gt;&lt;!-- tab --&gt;**This is Tab 2.**&lt;!-- endtab --&gt;&lt;!-- tab --&gt;**This is Tab 3.**&lt;!-- endtab --&gt;&#123;% endtabs %&#125;\n自定义Tab名&#123;% tabs 杨玉环 %&#125;&lt;!-- tab 第一个Tab --&gt;**tab名字为第一个Tab**&lt;!-- endtab --&gt;&lt;!-- tab @fab fa-apple-pay --&gt;**只有图标 没有Tab名字**&lt;!-- endtab --&gt;&lt;!-- tab 炸弹@fas fa-bomb --&gt;**名字+icon**&lt;!-- endtab --&gt;&#123;% endtabs %&#125;\nhideToggle-折叠框推荐使用 Tag Plugins plus 的 folding 标签，样式更好看。\n\n标签语法配置参数样式预览示例源码&#123;% hideToggle display,bg,color %&#125;content&#123;% endhideToggle %&#125;\n\n\n\n参数\n用法\n\n\n\n\ndisplay\n显示的文字\n\n\nbg\n【可选】背景颜色，格式需类似 #FF7242\n\n\ncolor\n【可选】文字的颜色，格式需类似 #fff\n\n\n\nButterfly安装方法在你的博客根目录里git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/Butterfly\n如果想要安装比较新的 dev 分支，可以git clone -b dev https://github.com/jerryc127/hexo-theme-butterfly.git themes/Butterfly\n&#123;% hideToggle Butterfly安装方法 %&#125;在你的博客根目录里git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/Butterfly如果想要安装比较新的 dev 分支，可以git clone -b dev https://github.com/jerryc127/hexo-theme-butterfly.git themes/Butterfly&#123;% endhideToggle %&#125;\nhideInline-隐藏span标签语法配置参数样式预览示例源码&#123;% hideInline content,display,bg,color %&#125;\n\n\n\n参数\n用法\n\n\n\n\ncontent\n文本内容\n\n\ndisplay\n【可选】按钮显示的文字，默认为 click\n\n\nbg\n【可选】按钮的背景颜色，格式需类似 #FF7242\n\n\ncolor\n【可选】按钮文字的颜色，格式需类似 #fff\n\n\n\n\n哪个英文字母最酷？ 查看答案因为西装裤(C装酷)\n\n门里站着一个人? Click闪\n哪个英文字母最酷？ &#123;% hideInline 因为西装裤(C装酷),查看答案,#FF7242,#fff %&#125;门里站着一个人? &#123;% hideInline 闪 %&#125;\nhideBlock-隐藏block标签语法配置参数样式预览示例源码&#123;% hideBlock display,bg,color %&#125;content&#123;% endhideBlock %&#125;\n\n\n\n参数\n用法\n\n\n\n\ncontent\n文本内容\n\n\ndisplay\n【可选】按钮显示的文字，默认为 click\n\n\nbg\n【可选】按钮的背景颜色，格式需类似 #FF7242\n\n\ncolor\n【可选】按钮文字的颜色，格式需类似 #fff\n\n\n\n查看答案傻子，怎么可能有答案\n&#123;% hideBlock 查看答案 %&#125;傻子，怎么可能有答案&#123;% endhideBlock %&#125;\nbtn-按钮链接标签语法配置参数样式预览示例源码&#123;% btn [url],[text],[icon],[color] [style] [layout] [position] [size] %&#125;\n\n\n\n参数\n用法\n\n\n\n\nurl\n【必须】链接地址\n\n\ntext\n【必须】按钮文字\n\n\nicon\n【可选】图标\n\n\ncolor\n【可选】按钮背景顔色（默认 style 时）按钮字体和边框顔色(outline 时)配置： 留空 / blue / pink / red / purple / orange / green\n\n\nstyle\n【可选】按钮样式 默认实心配置： outline / 留空\n\n\nlayout\n【可选】按钮佈局 默认为 line配置： block / 留空\n\n\nposition\n【可选】按钮位置 前提是设置了 layout 为 block 默认为左边配置： center / right / 留空\n\n\nsize\n【可选】按钮大小配置： larger / 留空\n\n\n\n 基本 \n              \n              This is my website, click the button ButterflyThis is my website, click the button ButterflyThis is my website, click the button ButterflyThis is my website, click the button ButterflyThis is my website, click the button Butterfly\n              \n            \n\n 图标+位置 \n              \n              ButterflyButterflyButterfly\n              \n            \n\n 图标+大尺寸+颜色 \n              \n              ButterflyButterflyButterflyButterflyButterflyButterflyButterfly\n              \n            \n\n 图标+空心+大尺寸+颜色 \n              \n              ButterflyButterflyButterflyButterflyButterflyButterflyButterfly\n              \n            基本This is my website, click the button &#123;% btn &#x27;https://butterfly.js.org/&#x27;, Butterfly %&#125;This is my website, click the button &#123;% btn &#x27;https://butterfly.js.org/&#x27;, Butterfly, far fa-hand-point-right %&#125;This is my website, click the button &#123;% btn &#x27;https://butterfly.js.org/&#x27;, Butterfly, , outline %&#125;This is my website, click the button &#123;% btn &#x27;https://butterfly.js.org/&#x27;, Butterfly, far fa-hand-point-right, outline %&#125;This is my website, click the button &#123;% btn &#x27;https://butterfly.js.org/&#x27;, Butterfly, far fa-hand-point-right, larger %&#125;\n图标+位置&#123;% btn &#x27;https://butterfly.js.org/&#x27;, Butterfly, far fa-hand-point-right, block %&#125;&#123;% btn &#x27;https://butterfly.js.org/&#x27;, Butterfly, far fa-hand-point-right, block center larger %&#125;&#123;% btn &#x27;https://butterfly.js.org/&#x27;, Butterfly, far fa-hand-point-right, block right outline larger %&#125;\n图标+大尺寸+颜色&#123;% btn &#x27;https://butterfly.js.org/&#x27;, Butterfly, far fa-hand-point-right, larger %&#125;&#123;% btn &#x27;https://butterfly.js.org/&#x27;, Butterfly, far fa-hand-point-right, blue larger %&#125;&#123;% btn &#x27;https://butterfly.js.org/&#x27;, Butterfly, far fa-hand-point-right, pink larger %&#125;&#123;% btn &#x27;https://butterfly.js.org/&#x27;, Butterfly, far fa-hand-point-right, red larger %&#125;&#123;% btn &#x27;https://butterfly.js.org/&#x27;, Butterfly, far fa-hand-point-right, purple larger %&#125;&#123;% btn &#x27;https://butterfly.js.org/&#x27;, Butterfly, far fa-hand-point-right, orange larger %&#125;&#123;% btn &#x27;https://butterfly.js.org/&#x27;, Butterfly, far fa-hand-point-right, green larger %&#125;\n图标+空心+大尺寸+颜色&#123;% btn &#x27;https://butterfly.js.org/&#x27;, Butterfly, far fa-hand-point-right, outline larger %&#125;&#123;% btn &#x27;https://butterfly.js.org/&#x27;, Butterfly, far fa-hand-point-right, outline blue larger %&#125;&#123;% btn &#x27;https://butterfly.js.org/&#x27;, Butterfly, far fa-hand-point-right, outline pink larger %&#125;&#123;% btn &#x27;https://butterfly.js.org/&#x27;, Butterfly, far fa-hand-point-right, outline red larger %&#125;&#123;% btn &#x27;https://butterfly.js.org/&#x27;, Butterfly, far fa-hand-point-right, outline purple larger %&#125;&#123;% btn &#x27;https://butterfly.js.org/&#x27;, Butterfly, far fa-hand-point-right, outline orange larger %&#125;&#123;% btn &#x27;https://butterfly.js.org/&#x27;, Butterfly, far fa-hand-point-right, outline green larger %&#125;\ninlineImg-内联图片标签语法配置参数样式预览示例源码&#123;% inlineImg [src] [height] %&#125;\n\n\n\n参数\n用法\n\n\n\n\nsrc\n图片链接\n\n\nheight\n【可选】图片高度限制\n\n\n\n你看她长得漂亮不\n\n我觉得很漂亮 你看她长得漂亮不![](https://i.loli.net/2021/03/19/2P6ivUGsdaEXSFI.png)我觉得很漂亮 &#123;% inlineImg https://i.loli.net/2021/03/19/5M4jUB3ynq7ePgw.png 150px %&#125;\ntimeline-时间轴标签语法配置参数样式预览示例源码&#123;% timeline title,color %&#125;&lt;!-- timeline title --&gt;xxxxx&lt;!-- endtimeline --&gt;&#123;% endtimeline %&#125;\n\n\n\n参数\n用法\n\n\n\n\ntitle\n标题/时间线\n\n\ncolor\ntimeline 颜色留空 / blue / pink / red / purple / orange / green\n\n\n\n\n        \n          2025\n\n        \n      \n        \n          05-02\n\n        \n        劳动节！\n\n      \n        \n          06-01\n\n        \n        儿童节！\n\n      &#123;% timeline 2025,green %&#125;&lt;!-- timeline 05-02 --&gt;劳动节！&lt;!-- endtimeline --&gt;&lt;!-- timeline 06-01 --&gt;儿童节！&lt;!-- endtimeline --&gt;&#123;% endtimeline %&#125;\ngallery-相册标签语法配置参数样式预览示例源码&#123;% gallery [button] %&#125;markdown 图片格式&#123;% endgallery %&#125;\n\n\n\n参数\n用法\n\n\n\n\nbutton\n【可选】点击按钮加载更多图片，填写 true/false。默认为 false。\n\n\n\n\n    [{\"url\":\"https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg\",\"alt\":\"\",\"title\":\"\"},{\"url\":\"https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg\",\"alt\":\"\",\"title\":\"\"},{\"url\":\"https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg\",\"alt\":\"\",\"title\":\"\"},{\"url\":\"https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg\",\"alt\":\"\",\"title\":\"\"},{\"url\":\"https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg\",\"alt\":\"\",\"title\":\"\"},{\"url\":\"https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg\",\"alt\":\"\",\"title\":\"\"},{\"url\":\"https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg\",\"alt\":\"\",\"title\":\"\"},{\"url\":\"https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg\",\"alt\":\"\",\"title\":\"\"}]\n  &#123;% gallery %&#125;![](https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg)![](https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg)![](https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg)![](https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg)![](https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg)![](https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg)![](https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg)![](https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg)&#123;% endgallery %&#125;\ngalleryGroup-相册图库标签语法配置参数样式预览示例源码&lt;div class=&quot;gallery-group-main&quot;&gt;&#123;% galleryGroup name description link img-url %&#125;&#123;% galleryGroup name description link img-url %&#125;&#123;% galleryGroup name description link img-url %&#125;&lt;/div&gt;\n\n\n\n参数\n用法\n\n\n\n\nname\n图库名字\n\n\ndescription\n图库描述\n\n\nlink\n连接到对应相册的地址\n\n\nimg-url\n图库封面的地址\n\n\n\n\n\n    \n    \n      Example\n      关于OH MY GIRL的图片\n      \n    \n  \n&lt;div class=&quot;gallery-group-main&quot;&gt;&#123;% galleryGroup &#x27;Example&#x27; &#x27;关于OH MY GIRL的图片&#x27; &#x27;/gallery/example&#x27; https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg %&#125;&lt;/div&gt;\nflink-友链效果样式预览示例源码友情链接那些人，那些事\n      \n        \n          \n            \n          \n          Hexo\n          快速、简单且强大的网志框架\n        \n      网站值得推荐的网站\n      \n        \n          \n            \n          \n          Youtube\n          视频网站\n        \n      \n      \n        \n          \n            \n          \n          Weibo\n          中国最大社交分享平台\n        \n      \n      \n        \n          \n            \n          \n          Twitter\n          社交分享平台\n        \n      &#123;% flink %&#125;- class_name: 友情链接  class_desc: 那些人，那些事  link_list:    - name: Hexo      link: https://hexo.io/zh-tw/      avatar: https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg      descr: 快速、简单且强大的网志框架- class_name: 网站  class_desc: 值得推荐的网站  link_list:    - name: Youtube      link: https://www.youtube.com/      avatar: https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png      descr: 视频网站    - name: Weibo      link: https://www.weibo.com/      avatar: https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png      descr: 中国最大社交分享平台    - name: Twitter      link: https://twitter.com/      avatar: https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png      descr: 社交分享平台&#123;% endflink %&#125;\n数学公式需要主题配置，开启 math 功能\n样式预览示例源码$\\sqrt{2}$$\\sqrt&#123;2&#125;$\nSeries系列文章需要主题配置，开启 series 功能。\n_config.butterfly.ymlseries:  enable: true\n标签语法配置参数效果预览示例源码&#123;% series [series name] %&#125;在文章的 front-matter 上添加参数 series，并给与一个标识。\n相同标识的文章，会被主题识别为一个系列合集。\n通过此标签外挂，可以将指定名称的系列，以超链接列表展示出来。\n标签外挂中，如果 [series name] 未填写，则会默认使用当前文章的 front-matter 的 series 标识。Butterfly 标签外挂语法Tag Plugins Plus 标签外挂语法&#123;% series tag-plugin %&#125;\nABCJS乐谱需要主题配置，开启 abcjs 功能。\n_config.butterfly.ymlabcjs:  enable: true\n样式预览示例源码X:1\nT:alternate heads\nM:C\nL:1/8\nU:n=!style=normal!\nK:C treble style=rhythm\n&quot;Am&quot; BBBB B2 B&gt;B | &quot;Dm&quot; B2 B/B/B &quot;C&quot; B4 |&quot;Am&quot; B2 nGnB B2 nGnA | &quot;Dm&quot; nDB/B/ nDB/B/ &quot;C&quot; nCB/B/ nCB/B/ |B8| B0 B0 B0 B0 |]\n%%text This translates to:\n[M:C][K:style=normal]\n[A,EAce][A,EAce][A,EAce][A,EAce] [A,EAce]2 [A,EAce]&gt;[A,EAce] |[DAdf]2 [DAdf]/[DAdf]/[DAdf] [CEGce]4 |[A,EAce]2 GA [A,EAce] GA |D[DAdf]/[DAdf]/ D[DAdf]/[DAdf]/ C [CEGce]/[CEGce]/ C[CEGce]/[CEGce]/ |[CEGce]8 | [CEGce]2 [CEGce]2 [CEGce]2 [CEGce]2 |]\nGAB2 !style=harmonic![gb]4|GAB2 [K: style=harmonic]gbgb|\n[K: style=x]\nC/A,/ C/C/E C/zz2|\nw:Rock-y did-nt like that&#123;% score %&#125;X:1T:alternate headsM:CL:1/8U:n=!style=normal!K:C treble style=rhythm&quot;Am&quot; BBBB B2 B&gt;B | &quot;Dm&quot; B2 B/B/B &quot;C&quot; B4 |&quot;Am&quot; B2 nGnB B2 nGnA | &quot;Dm&quot; nDB/B/ nDB/B/ &quot;C&quot; nCB/B/ nCB/B/ |B8| B0 B0 B0 B0 |]%%text This translates to:[M:C][K:style=normal][A,EAce][A,EAce][A,EAce][A,EAce] [A,EAce]2 [A,EAce]&gt;[A,EAce] |[DAdf]2 [DAdf]/[DAdf]/[DAdf] [CEGce]4 |[A,EAce]2 GA [A,EAce] GA |D[DAdf]/[DAdf]/ D[DAdf]/[DAdf]/ C [CEGce]/[CEGce]/ C[CEGce]/[CEGce]/ |[CEGce]8 | [CEGce]2 [CEGce]2 [CEGce]2 [CEGce]2 |]GAB2 !style=harmonic![gb]4|GAB2 [K: style=harmonic]gbgb|[K: style=x]C/A,/ C/C/E C/zz2|w:Rock-y did-nt like that&#123;% endscore %&#125;\nMermaid图表需要主题配置，开启 mermaid 功能。\n_config.butterfly.ymlmermaid:  enable: true\n样式预览示例源码\n    pie\ntitle Key elements in Product X\n&quot;Calcium&quot; : 42.96\n&quot;Potassium&quot; : 50.05\n&quot;Magnesium&quot; : 10.01\n&quot;Iron&quot; : 5\n  &#123;% mermaid %&#125;pietitle Key elements in Product X&quot;Calcium&quot; : 42.96&quot;Potassium&quot; : 50.05&quot;Magnesium&quot; : 10.01&quot;Iron&quot; : 5&#123;% endmermaid %&#125;\nChartjs图表需要主题配置，开启 chartjs 功能。\n_config.butterfly.ymlchartjs:  enable: true\n样式预览示例源码\n            {\n&quot;type&quot;: &quot;line&quot;,\n&quot;data&quot;: {\n&quot;labels&quot;: [&quot;January&quot;, &quot;February&quot;, &quot;March&quot;, &quot;April&quot;, &quot;May&quot;, &quot;June&quot;, &quot;July&quot;],\n&quot;datasets&quot;: [{\n&quot;label&quot;: &quot;My First dataset&quot;,\n&quot;backgroundColor&quot;: &quot;rgb(255, 99, 132)&quot;,\n&quot;borderColor&quot;: &quot;rgb(255, 99, 132)&quot;,\n&quot;data&quot;: [0, 10, 5, 2, 20, 30, 45]\n}]\n},\n&quot;options&quot;: {\n&quot;responsive&quot;: true,\n&quot;title&quot;: {\n&quot;display&quot;: true,\n&quot;text&quot;: &quot;Chart.js Line Chart&quot;\n}\n}\n}\n\n\n          &#123;% chartjs 70 %&#125;&lt;!-- chart --&gt;&#123;&quot;type&quot;: &quot;line&quot;,&quot;data&quot;: &#123;&quot;labels&quot;: [&quot;January&quot;, &quot;February&quot;, &quot;March&quot;, &quot;April&quot;, &quot;May&quot;, &quot;June&quot;, &quot;July&quot;],&quot;datasets&quot;: [&#123;&quot;label&quot;: &quot;My First dataset&quot;,&quot;backgroundColor&quot;: &quot;rgb(255, 99, 132)&quot;,&quot;borderColor&quot;: &quot;rgb(255, 99, 132)&quot;,&quot;data&quot;: [0, 10, 5, 2, 20, 30, 45]&#125;]&#125;,&quot;options&quot;: &#123;&quot;responsive&quot;: true,&quot;title&quot;: &#123;&quot;display&quot;: true,&quot;text&quot;: &quot;Chart.js Line Chart&quot;&#125;&#125;&#125;&lt;!-- endchart --&gt;&#123;% endchartjs %&#125;","categories":["语法文档"],"tags":["Hexo"]},{"title":"Markdown 语法","url":"/posts/3c50d03d.html","content":"Markdown 是一种轻量级标记语言，语法十分简单，常用的标记符号不超过十个。\n速查表\n标题语法要创建标题，在单词或短语前面添加井号（#），并紧跟一个空格。\n# 号的数量代表了标题的级别，支持 1~6 级标题。\n 语法效果 \n              \n              Markdown 语法效果预览# 一级标题一级标题## 二级标题二级标题### 三级标题三级标题#### 四级标题四级标题##### 五级标题五级标题###### 六级标题六级标题\n              \n            \n强调语法要用 斜体 显示文本，在单词或短语前后添加一个星号 *。\n要 加粗 文本，在单词或短语的前后各添加两个星号 **。\n要同时用 粗体和斜体 突出显示文本，在单词或短语的前后各添加三个星号 ***。\n 语法效果 \n              \n              Markdonwn 语法效果预览Italicized text is the *cat’s meow*.Italicized text is the cat’s meow.I just love **bold text**.I just love bold text.This text is ***really important***.This text is really important.\n              \n            \n引用语法要创建块引用，在段落前添加一个 &gt; 符号，后面紧跟一个空格。\n 语法效果 \n              \n              &gt; Dorothy followed her through many of the beautiful rooms in her castle.渲染效果如下所示：Dorothy followed her through many of the beautiful rooms in her castle.\n              \n            \n列表语法可以将多个条目组织成有序或无序列表。\n创建有序列表，在每个列表项前添加数字，并紧跟一个英文句点，再紧跟一个空格。\n创建无序列表，在每个列表项前面添加破折号 -，后面紧跟一个空格。\n 有序列表 \n              \n              1. First item2. Second item3. Third item    1. Indented item    2. Indented item4. Fourth item渲染效果如下所示：First itemSecond itemThird itemIndented itemIndented itemFourth item\n              \n            \n 无序列表 \n              \n              - First item- Second item- Third item    - Indented item    - Indented item- Fourth item渲染效果如下所示：First itemSecond itemThird itemIndented itemIndented itemFourth item\n              \n            \n代码语法要将单词或短语表示为代码，将其包裹在反引号 ` 中。\n如果单词或短语中包含一个或多个反引号，将其包裹在双反引号 (``) 中。\n要创建代码块，在代码块前后行上使用三个反引号（```）。 首行的反引号可指定代码语言，实现语法高亮。\n 语法效果 \n              \n              Markdonwn 语法效果预览At the command prompt, type `nano`At the command prompt, type nano.``Use `code` in your Markdown file.``Use `code` in your Markdown file.代码块书写示例：```json{“firstName”: “John”,“lastName”: “Smith”,“age”: 25}```代码块效果如下所示：&#123;  &quot;firstName&quot;: &quot;John&quot;,  &quot;lastName&quot;: &quot;Smith&quot;,  &quot;age&quot;: 25&#125;\n              \n            \n分隔线语法要创建分隔线，在单独一行上使用三个或多个破折号 (---) ，并且不能包含其他内容。\n 语法效果 \n              \n              Try to put a blank line before...---...and after a horizontal rule.渲染效果如下所示：Try to put a blank line before……and after a horizontal rule.\n              \n            \n链接语法链接文本放在 方括号 内，链接地址放在后面的 圆括号 中，链接 title 可选。\n语法格式：[超链接显示名](超链接地址 &quot;超链接title&quot;)\n 语法效果 \n              \n              这是一个链接 [Markdown语法](https://markdown.com.cn &quot;最好的 markdown 教程&quot;)。渲染效果如下所示：这是一个链接 Markdown语法。\n              \n            \n图片语法要添加图像，使用感叹号 (!), 在 方括号 增加替代文本，图片链接放在 圆括号 里，链接 title 可选。\n语法代码：![图片alt](图片链接 &quot;图片title&quot;)\n 语法效果 \n              \n              ![可选alt文本](https://cdn.jsdelivr.net/gh/lijiabao9/lijiabao9.pic.cloud@main/hexo/info/avatar.webp &quot;这是我的头像&quot;)渲染效果如下所示：\n              \n            \n转义字符语法要显示原本用于格式化 Markdown 文档的字符，在字符前面添加反斜杠字符 \\。\n 语法效果 \n              \n              \\* Without the backslash, this would be a bullet in an unordered list.渲染效果如下所示：* Without the backslash, this would be a bullet in an unordered list.\n              \n            \n表格语法要添加表，使用三个或多个连字符（---）创建每列的标题，并使用管道（|）分隔每列。\n可在标题行的连字符的左侧、右侧或两侧，添加冒号（:），设置表格对齐方式。\n 语法效果 \n              \n              | 姓名 | 性别 || :--- | :--- || 李雷 | 男 || 韩梅梅 | 女 |渲染效果如下所示：姓名性别李雷男韩梅梅女\n              \n            \n删除线语法要给文本添加中心水平线表示删除，用两个波浪号 ~~ 包裹文本。\n 语法效果 \n              \n              ~~世界是平坦的。~~ 我们现在知道世界是圆的。渲染效果如下所示：世界是平坦的。 我们现在知道世界是圆的。\n              \n            ","categories":["语法文档"],"tags":["Markdown"]},{"title":"Tag Plugins Plus 标签外挂语法","url":"/posts/27853e63.html","content":"Tag Plugins Plus 作为 Butterfly 主题的增强版标签外挂插件，在保留原有功能的基础上，新增了更强大的标签外挂。\n本文将详细介绍 Tag Plugins Plus 标签外挂的使用方法，以及渲染效果。\n\n官方文档请看 Tag Plugins Plus | Akilarの糖果屋\n\n\ntext-行内文本样式标签语法样式预览示例源码&#123;% u 文本内容 %&#125;&#123;% emp 文本内容 %&#125;&#123;% wavy 文本内容 %&#125;&#123;% del 文本内容 %&#125;&#123;% kbd 文本内容 %&#125;&#123;% psw 文本内容 %&#125;\n带 下划线 的文本\n带 着重号 的文本\n带 波浪线 的文本\n带 删除线 的文本\n键盘样式的文本 command + D\n密码样式的文本：这里没有验证码\n1. 带 &#123;% u 下划线 %&#125; 的文本2. 带 &#123;% emp 着重号 %&#125; 的文本3. 带 &#123;% wavy 波浪线 %&#125; 的文本4. 带 &#123;% del 删除线 %&#125; 的文本5. 键盘样式的文本 &#123;% kbd command %&#125; + &#123;% kbd D %&#125;6. 密码样式的文本：&#123;% psw 这里没有验证码 %&#125;\nspan-行内文本样式标签语法配置参数样式预览示例源码&#123;% span 样式参数(参数以空格划分), 文本内容 %&#125;\n字体: logo, code\n颜色: red, yellow, green, cyan, blue, gray\n大小: small, h4, h3, h2, h1, large, huge, ultra\n对齐方向: left, center, right\n\n彩色文字在一段话中方便插入各种颜色的标签，包括：红色、黄色、绿色、青色、蓝色、灰色。\n超大号文字文档「开始」页面中的标题部分就是超大号文字。VolantisA Wonderful Theme for Hexo\n- 彩色文字    在一段话中方便插入各种颜色的标签，包括：&#123;% span red, 红色 %&#125;、&#123;% span yellow, 黄色 %&#125;、&#123;% span green, 绿色 %&#125;、&#123;% span cyan, 青色 %&#125;、&#123;% span blue, 蓝色 %&#125;、&#123;% span gray, 灰色 %&#125;。- 超大号文字    文档「开始」页面中的标题部分就是超大号文字。    &#123;% span center logo large, Volantis %&#125;    &#123;% span center small, A Wonderful Theme for Hexo %&#125;\np-段落文本样式标签语法配置参数样式预览示例源码&#123;% p 样式参数(参数以空格划分), 文本内容 %&#125;\n字体: logo, code\n颜色: red, yellow, green, cyan, blue, gray\n大小: small, h4, h3, h2, h1, large, huge, ultra\n对齐方向: left, center, right\n\n彩色文字在一段话中方便插入各种颜色的标签，包括：红色、黄色、绿色、青色、蓝色、灰色。\n超大号文字文档「开始」页面中的标题部分就是超大号文字。Volantis\nA Wonderful Theme for Hexo\n\n\n- 彩色文字    在一段话中方便插入各种颜色的标签，包括：&#123;% p red, 红色 %&#125;、&#123;% p yellow, 黄色 %&#125;、&#123;% p green, 绿色 %&#125;、&#123;% p cyan, 青色 %&#125;、&#123;% p blue, 蓝色 %&#125;、&#123;% p gray, 灰色 %&#125;。- 超大号文字    文档「开始」页面中的标题部分就是超大号文字。    &#123;% p center logo large, Volantis %&#125;    &#123;% p center small, A Wonderful Theme for Hexo %&#125;\nicon-阿里图标本标签的图标需要自己额外引入阿里矢量图标库的样式。\n在主题文件的插件配置中，通过 tag_plugins.CDN.iconfont=/assets/js/ali_icon_font.js，引入阿里图标的 JS 文件。\n\n标签语法配置参数样式预览示例源码&#123;% icon [icon-xxxx], [font-size] %&#125;\nicon-xxxx：表示图标 font-class，可以在自己的阿里矢量图标库项目的 font-class 引用方案内查询并复制。\nfont-size：表示图标大小，直接填写数字即可，单位为 em。图标大小默认值为 1em。\n\n\n\n\n\n\n\n\n\n\n\n&#123;% icon icon-rat_zi, 2 %&#125;&#123;% icon icon-rat %&#125;&#123;% icon icon-ox_chou, 2 %&#125;&#123;% icon icon-ox %&#125;&#123;% icon icon-tiger_yin, 2 %&#125;&#123;% icon icon-tiger %&#125;&#123;% icon icon-rabbit_mao, 2 %&#125;&#123;% icon icon-rabbit %&#125;&#123;% icon icon-dragon_chen, 2 %&#125;&#123;% icon icon-dragon %&#125;&#123;% icon icon-snake_si, 2 %&#125;&#123;% icon icon-snake %&#125;&#123;% icon icon-horse_wu, 2 %&#125;&#123;% icon icon-horse %&#125;&#123;% icon icon-goat_wei, 2 %&#125;&#123;% icon icon-goat %&#125;&#123;% icon icon-monkey_shen, 2 %&#125;&#123;% icon icon-monkey %&#125;&#123;% icon icon-rooster_you, 2 %&#125;&#123;% icon icon-rooster %&#125;&#123;% icon icon-dog_xu, 2 %&#125;&#123;% icon icon-dog %&#125;&#123;% icon icon-boar_hai, 2 %&#125;&#123;% icon icon-boar %&#125;\nprogress-进度条标签语法配置参数样式预览示例源码&#123;% progress [width] [color] [text] %&#125;\nwidth: 0 到 100 的阿拉伯数字\ncolor: 颜色，取值有 red, yellow, green, cyan, blue, gray\ntext: 进度条上的文字内容\n进度条样式预览\n进度条样式预览\n进度条样式预览\n进度条样式预览\n进度条样式预览\n进度条样式预览&#123;% progress 10 red 进度条样式预览 %&#125;&#123;% progress 30 yellow 进度条样式预览 %&#125;&#123;% progress 50 green 进度条样式预览 %&#125;&#123;% progress 70 cyan 进度条样式预览 %&#125;&#123;% progress 90 blue 进度条样式预览 %&#125;&#123;% progress 100 gray 进度条样式预览 %&#125;\nfolding-折叠框Butterfly 虽然也有内置折叠框 hideToggle 标签，但是 Volantis 的 folding 折叠框更好看一些。\n\n标签语法配置参数样式预览示例源码&#123;% folding 参数(可选), 标题 %&#125;折叠框内容&#123;% endfolding %&#125;\n颜色：red, yellow, green, cyan, blue, gray\n状态：状态填写 open 代表默认打开。\n 查看图片测试 \n              \n              \n              \n            \n\n\n 查看默认打开的折叠框 \n              \n              这是一个默认打开的折叠框。\n              \n            \n\n\n 查看代码测试 \n              \n              假装这里有代码块（代码块没法嵌套代码块）\n              \n            \n\n\n 查看列表测试 \n              \n              hahahehe\n              \n            \n\n\n 查看嵌套测试 \n              \n               查看子嵌套测试2                              查看子孙嵌套测试3                             hahaha                                                     \n              \n            &#123;% folding 查看图片测试 %&#125;![](https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg)&#123;% endfolding %&#125;&#123;% folding cyan open, 查看默认打开的折叠框 %&#125;这是一个默认打开的折叠框。&#123;% endfolding %&#125;&#123;% folding green, 查看代码测试 %&#125;假装这里有代码块（代码块没法嵌套代码块）&#123;% endfolding %&#125;&#123;% folding yellow, 查看列表测试 %&#125;- haha- hehe&#123;% endfolding %&#125;&#123;% folding red, 查看嵌套测试 %&#125;&#123;% folding blue, 查看子嵌套测试2 %&#125;&#123;% folding 查看子孙嵌套测试3 %&#125;hahaha &lt;span&gt;&lt;img src=&#x27;https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png&#x27; style=&#x27;height:24px&#x27; alt=&quot;&quot;&gt;&lt;/span&gt;&#123;% endfolding %&#125;&#123;% endfolding %&#125;&#123;% endfolding %&#125;\ntabs-分栏与 butterfly 主题的 Butterfly Tabs 用法一致。\n\nnote-引用与 Butterfly 主题的 Butterfly Note 用法一致。\n\ntip-上标标签主要样式参考自小康的 butterfly 渐变背景标签，插件开发者写了个 tip.js 来渲染标签，精简了一下代码。\n\n自定义图标按照教程，是显示不出来的。经过测试，需要引入指定的 css 文件才可以。\n_config.butterfly.yml# Inject# Insert the code to head (before &#x27;&lt;/head&gt;&#x27; tag) and the bottom (before &#x27;&lt;/body&gt;&#x27; tag)inject:  head:    - &lt;link rel=&quot;stylesheet&quot; href=&quot;https://npm.elemecdn.com/@fortawesome/fontawesome-free@latest/css/all.min.css&quot;&quot;&gt;\n\n标签语法配置参数样式预览示例源码&#123;% tip [可选参数] %&#125;文本内容&#123;% endtip %&#125;\n样式: success, info, warning, error, bolt, ban, home, sync, cogs, key, bell\n自定义图标: 支持 fontawesome。\ndefault\n\n\ninfo\n\n\nsuccess\n\n\nerror\n\n\nwarning\n\n\nbolt\n\n\nban\n\n\nhome\n\n\nsync\n\n\ncogs\n\n\nkey\n\n\nbell\n\n\n自定义 font awesome 图标\n&#123;% tip %&#125;default&#123;% endtip %&#125;&#123;% tip info %&#125;info&#123;% endtip %&#125;&#123;% tip success %&#125;success&#123;% endtip %&#125;&#123;% tip error %&#125;error&#123;% endtip %&#125;&#123;% tip warning %&#125;warning&#123;% endtip %&#125;&#123;% tip bolt %&#125;bolt&#123;% endtip %&#125;&#123;% tip ban %&#125;ban&#123;% endtip %&#125;&#123;% tip home %&#125;home&#123;% endtip %&#125;&#123;% tip sync %&#125;sync&#123;% endtip %&#125;&#123;% tip cogs %&#125;cogs&#123;% endtip %&#125;&#123;% tip key %&#125;key&#123;% endtip %&#125;&#123;% tip bell %&#125;bell&#123;% endtip %&#125;&#123;% tip fa-atom %&#125;自定义font awesome图标&#123;% endtip %&#125;\ntip-animated-动态上标动态标签的实质是引用了 font-awesome-animation 的 css 样式，不一定局限于 tip 标签，也可以是其他标签。只不过这里 tip.js 是插件开发者自己写的，所以清楚它会怎么被渲染成html，才用的这个写法。可以熟读文档，使用 html 语言来编写其他标签类型。\n\n标签语法配置参数样式预览示例源码&#123;% tip [可选参数] fas-xxx animated %&#125;文本内容&#123;% endtip %&#125;更多详情请参看 font-awesome-animation 文档\n\n将所需的 CSS 类添加到图标（或DOM中的任何元素）。\n对于父级悬停样式，需要给目标元素添加指定 CSS 类，同时还要给目标元素的父级元素添加 CSS 类 faa-parent animated-hover。（详情见示例及示例源码）\n可以通过给目标元素添加 CSS类 .faa-fast 或 .faa-slow 来控制动画快慢。\n\n\n\n\n\n\n\nOn DOM load  当页面加载时  显示动画\nOn hover  当鼠标悬停时  显示动画\nOn parent hover  当鼠标悬停在父级元素时  显示动画\n\n\n\n\n faa-wrench animated\n faa-wrench animated-hover\n faa-wrench\n\n\n faa-ring animated\n faa-ring animated-hover\n faa-ring\n\n\n faa-horizontal animated\n faa-horizontal animated-hover\n faa-horizontal\n\n\n faa-vertical animated\n faa-vertical animated-hover\n faa-vertical\n\n\n faa-flash animated\n faa-flash animated-hover\n faa-flash\n\n\n faa-bounce animated\n faa-bounce animated-hover\n faa-bounce\n\n\n faa-spin animated\n faa-spin animated-hover\n faa-spin\n\n\n faa-float animated\n faa-float animated-hover\n faa-float\n\n\n faa-pulse animated\n faa-pulse animated-hover\n faa-pulse\n\n\n faa-shake animated\n faa-shake animated-hover\n faa-shake\n\n\n faa-tada animated\n faa-tada animated-hover\n faa-tada\n\n\n faa-passing animated\n faa-passing animated-hover\n faa-passing\n\n\n faa-burst animated\n faa-burst animated-hover\n faa-burst\n\n\n faa-falling animated\n faa-falling animated-hover\n faa-falling\n\n\n faa-rising animated\n faa-rising animated-hover\n faa-rising\n\n\n\n 当页面加载时显示动画 \n              \n              warningban\n              \n            \n\n 调整动画速度 \n              \n              warningban\n              \n            \n\n 当鼠标悬停时显示动画 \n              \n              warningban\n              \n            \n\n 当鼠标悬停在父级元素时显示动画 \n              \n              warningban\n              \n             当页面加载时显示动画 \n              \n              &#123;% tip warning faa-horizontal animated %&#125;warning&#123;% endtip %&#125;&#123;% tip ban faa-flash animated %&#125;ban&#123;% endtip %&#125;\n              \n            \n\n 调整动画速度 \n              \n              &#123;% tip warning faa-horizontal animated faa-fast %&#125;warning&#123;% endtip %&#125;&#123;% tip ban faa-flash animated faa-slow %&#125;ban&#123;% endtip %&#125;\n              \n            \n\n 当鼠标悬停时显示动画 \n              \n              &#123;% tip warning faa-horizontal animated-hover %&#125;warning&#123;% endtip %&#125;&#123;% tip ban faa-flash animated-hover %&#125;ban&#123;% endtip %&#125;\n              \n            \n\n 当鼠标悬停在父级元素时显示动画 \n              \n              &#123;% tip warning faa-parent animated-hover %&#125;&lt;p class=&quot;faa-horizontal&quot;&gt;warning&lt;/p&gt;&#123;% endtip %&#125;&#123;% tip ban faa-parent animated-hover %&#125;&lt;p class=&quot;faa-flash&quot;&gt;ban&lt;/p&gt;&#123;% endtip %&#125;\n              \n            \ncheckbox-复选列表标签语法配置参数样式预览示例源码&#123;% checkbox 样式参数(可选), 文本(支持简单md) %&#125;\n样式: plus, minus, times\n颜色: red, yellow, green, cyan, blue, gray\n选中状态: checked\n\n            纯文本测试\n            \n\n\n            支持简单的 markdown 语法\n            \n\n\n            支持自定义颜色\n            \n\n\n            绿色 + 默认选中\n            \n\n\n            黄色 + 默认选中\n            \n\n\n            青色 + 默认选中\n            \n\n\n            蓝色 + 默认选中\n            \n\n\n            增加\n            \n\n\n            减少\n            \n\n\n            叉\n            &#123;% checkbox 纯文本测试 %&#125;&#123;% checkbox checked, 支持简单的 [markdown](https://guides.github.com/features/mastering-markdown/) 语法 %&#125;&#123;% checkbox red, 支持自定义颜色 %&#125;&#123;% checkbox green checked, 绿色 + 默认选中 %&#125;&#123;% checkbox yellow checked, 黄色 + 默认选中 %&#125;&#123;% checkbox cyan checked, 青色 + 默认选中 %&#125;&#123;% checkbox blue checked, 蓝色 + 默认选中 %&#125;&#123;% checkbox plus green checked, 增加 %&#125;&#123;% checkbox minus yellow checked, 减少 %&#125;&#123;% checkbox times red checked, 叉 %&#125;\nradio-单选列表标签语法配置参数样式预览示例源码&#123;% radio 样式参数(可选), 文本(支持简单md) %&#125;\n颜色: red, yellow, green, cyan, blue, gray\n选中状态: checked\n\n            纯文本测试\n            \n\n\n            支持简单的 markdown 语法\n            \n\n\n            支持自定义颜色\n            \n\n\n            绿色\n            \n\n\n            黄色\n            \n\n\n            青色\n            \n\n\n            蓝色\n            &#123;% radio 纯文本测试 %&#125;&#123;% radio checked, 支持简单的 [markdown](https://guides.github.com/features/mastering-markdown/) 语法 %&#125;&#123;% radio red, 支持自定义颜色 %&#125;&#123;% radio green, 绿色 %&#125;&#123;% radio yellow, 黄色 %&#125;&#123;% radio cyan, 青色 %&#125;&#123;% radio blue, 蓝色 %&#125;\ntimeline-时间轴插件版 v1.0.16 以后，为避免与 Butterfly_v4.0+ 版本中的 timeline 外挂标签冲突，已经移除了插件内的 timeline 外挂标签，请低于 Butterfly_v4.0 的用户升级主题，或安装 1.0.15 版本的外挂标签插件，或者自行添加 timeline.js 和 timeline.styl 文件至对应文件夹。\n请使用了原有 timeline 外挂标签的用户受累替换语法格式。Butterfly_v4.0+ 自带的 timeline 外挂标签样式更加好看。语法语意也更加清晰。\n前往 Butterfly Timeline 查看具体用法。\n\nlink-卡片链接标签语法样式预览示例源码&#123;% link 标题, 链接, 图片链接（可选） %&#125;关于我https://lijiabao9.github.io/about&#123;% link 关于我, https://lijiabao9.github.io/about %&#125;\nbtn-按钮链接与 butterfly 主题的 Butterfly Btn 用法一致。\n\nbtns-按钮组链接标签语法配置参数样式预览示例源码&#123;% btns 样式参数 %&#125;&#123;% cell 标题, 链接, 图片或者图标 %&#125;&#123;% cell 标题, 链接, 图片或者图标 %&#125;&#123;% endbtns %&#125;\n圆角样式：rounded, circle\n增加文字样式：可以在容器内增加 &lt;b&gt;标题&lt;/b&gt; 和 &lt;p&gt;描述文字&lt;/p&gt;\n布局方式：默认为自动宽度，适合视野内只有一两个的情况。\n\n\n\n\n\n参数\n含义\n\n\n\n\nwide\n宽一点的按钮\n\n\nfill\n填充布局，自动铺满至少一行，多了会换行\n\n\ncenter\n居中，按钮之间是固定间距\n\n\naround\n居中分散\n\n\ngrid2\n等宽最多2列，屏幕变窄会适当减少列数\n\n\ngrid3\n等宽最多3列，屏幕变窄会适当减少列数\n\n\ngrid4\n等宽最多4列，屏幕变窄会适当减少列数\n\n\ngrid5\n等宽最多5列，屏幕变窄会适当减少列数\n\n\n\n\n如果需要显示类似「团队成员」之类的一组含有头像的链接：\n\n         gabriel\ngabriel\ngabriel\ngabriel\ngabriel\n       \n\n或者含有图标的按钮：\n\n         我的博客\n我的博客\n       \n\n圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中\n\n         \n\n我的博客\n专业版\n\n\n\n\n我的博客\n免费版\n\n\n       \n\n\n\n如果需要显示类似「团队成员」之类的一组含有头像的链接：\n &#123;% btns circle grid5 %&#125;&#123;% cell gabriel, https://lijiabao9.github.io, https://cdn.jsdelivr.net/gh/lijiabao9/lijiabao9.pic.cloud@main/hexo/info/link-card.webp %&#125;&#123;% cell gabriel, https://lijiabao9.github.io, https://cdn.jsdelivr.net/gh/lijiabao9/lijiabao9.pic.cloud@main/hexo/info/link-card.webp %&#125;&#123;% cell gabriel, https://lijiabao9.github.io, https://cdn.jsdelivr.net/gh/lijiabao9/lijiabao9.pic.cloud@main/hexo/info/link-card.webp %&#125;&#123;% cell gabriel, https://lijiabao9.github.io, https://cdn.jsdelivr.net/gh/lijiabao9/lijiabao9.pic.cloud@main/hexo/info/link-card.webp %&#125;&#123;% cell gabriel, https://lijiabao9.github.io, https://cdn.jsdelivr.net/gh/lijiabao9/lijiabao9.pic.cloud@main/hexo/info/link-card.webp %&#125;&#123;% endbtns %&#125;\n\n或者含有图标的按钮：\n &#123;% btns rounded grid5 %&#125;&#123;% cell 我的博客, https://lijiabao9.github.io, fas fa-download %&#125;&#123;% cell 我的博客, https://lijiabao9.github.io, fas fa-book-open %&#125;&#123;% endbtns %&#125;\n\n圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中\n &#123;% btns circle center grid5 %&#125;&lt;a href=&#x27;https://lijiabao9.github.io&#x27;&gt;&lt;i class=&#x27;fas fa-shield&#x27;&gt;&lt;/i&gt;&lt;b&gt;我的博客&lt;/b&gt;&#123;% p red, 专业版 %&#125;&lt;img src=&#x27;https://cdn.jsdelivr.net/gh/lijiabao9/lijiabao9.pic.cloud@main/hexo/info/favicon.webp&#x27; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;a href=&#x27;https://lijiabao9.github.io&#x27;&gt;&lt;i class=&#x27;fas fa-shield&#x27;&gt;&lt;/i&gt;&lt;b&gt;我的博客&lt;/b&gt;&#123;% p green, 免费版 %&#125;&lt;img src=&#x27;https://cdn.jsdelivr.net/gh/lijiabao9/lijiabao9.pic.cloud@main/hexo/info/favicon.webp&#x27; alt=&quot;&quot;&gt;&lt;/a&gt;&#123;% endbtns %&#125;\n\n\nsitegroup-网站卡片标签语法样式预览示例源码&#123;% sitegroup %&#125;&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;&#123;% endsitegroup %&#125;\nGabriel`Blog我的博客\nGabriel`Blog我的博客\nGabriel`Blog我的博客\nGabriel`Blog我的博客\nGabriel`Blog我的博客\n&#123;% sitegroup %&#125;&#123;% site Gabriel`Blog, url=https://lijiabao9.github.io, screenshot=https://cdn.jsdelivr.net/gh/lijiabao9/lijiabao9.pic.cloud@main/hexo/info/link-card.webp, avatar=https://cdn.jsdelivr.net/gh/lijiabao9/lijiabao9.pic.cloud@main/hexo/info/avatar.webp, description=我的博客 %&#125;&#123;% site Gabriel`Blog, url=https://lijiabao9.github.io, screenshot=https://cdn.jsdelivr.net/gh/lijiabao9/lijiabao9.pic.cloud@main/hexo/info/link-card.webp, avatar=https://cdn.jsdelivr.net/gh/lijiabao9/lijiabao9.pic.cloud@main/hexo/info/avatar.webp, description=我的博客 %&#125;&#123;% site Gabriel`Blog, url=https://lijiabao9.github.io, screenshot=https://cdn.jsdelivr.net/gh/lijiabao9/lijiabao9.pic.cloud@main/hexo/info/link-card.webp, avatar=https://cdn.jsdelivr.net/gh/lijiabao9/lijiabao9.pic.cloud@main/hexo/info/avatar.webp, description=我的博客 %&#125;&#123;% site Gabriel`Blog, url=https://lijiabao9.github.io, screenshot=https://cdn.jsdelivr.net/gh/lijiabao9/lijiabao9.pic.cloud@main/hexo/info/link-card.webp, avatar=https://cdn.jsdelivr.net/gh/lijiabao9/lijiabao9.pic.cloud@main/hexo/info/avatar.webp, description=我的博客 %&#125;&#123;% site Gabriel`Blog, url=https://lijiabao9.github.io, screenshot=https://cdn.jsdelivr.net/gh/lijiabao9/lijiabao9.pic.cloud@main/hexo/info/link-card.webp, avatar=https://cdn.jsdelivr.net/gh/lijiabao9/lijiabao9.pic.cloud@main/hexo/info/avatar.webp, description=我的博客 %&#125;&#123;% endsitegroup %&#125;\nghcard-github卡片ghcard使用了 github-readme-stats 的API，支持直接使用 markdown 语法来写。\n\n标签语法配置参数样式预览示例源码&#123;% ghcard 用户名, 其它参数(可选) %&#125;&#123;% ghcard 用户名/仓库, 其它参数(可选) %&#125;更多参数可以参考：\n使用 英文逗号( &#44; ) 分割各个参数。写法为：参数名=参数值\n以下只写几个常用参数值:\n\n\n\n\n参数名\n取值\n释义\n\n\n\n\nhide\nstars, commits, prs, issues, contribs\n隐藏指定统计\n\n\ncount_private\ntrue\n将私人项目贡献添加到总提交计数中\n\n\nshow_icons\ntrue\n显示图标\n\n\ntheme\n请查阅 Available Themes\n主题\n\n\n\n\n用户信息卡片        \n\n仓库信息卡片        \n\n\n用户信息卡片\n &#123;% ghcard lijiabao9 %&#125;  &#123;% ghcard lijiabao9, theme=vue %&#125;&#123;% ghcard lijiabao9, theme=buefy %&#125;  &#123;% ghcard lijiabao9, theme=solarized-light %&#125;&#123;% ghcard lijiabao9, theme=onedark %&#125;  &#123;% ghcard lijiabao9, theme=solarized-dark %&#125;&#123;% ghcard lijiabao9, theme=algolia %&#125;  &#123;% ghcard lijiabao9, theme=calm %&#125;\n\n仓库信息卡片\n &#123;% ghcard lijiabao9/lijiabao9.github.io %&#125;  &#123;% ghcard lijiabao9/lijiabao9.github.io, theme=vue %&#125;&#123;% ghcard lijiabao9/lijiabao9.github.io, theme=buefy %&#125;  &#123;% ghcard lijiabao9/lijiabao9.github.io, theme=solarized-light %&#125;&#123;% ghcard lijiabao9/lijiabao9.github.io, theme=onedark %&#125;  &#123;% ghcard lijiabao9/lijiabao9.github.io, theme=solarized-dark %&#125;&#123;% ghcard lijiabao9/lijiabao9.github.io, theme=algolia %&#125;  &#123;% ghcard lijiabao9/lijiabao9.github.io, theme=calm %&#125;\n\n\nbdage-github徽标标签语法配置参数样式预览示例源码&#123;% bdage right,left,[logo] || [color],[link],[title] || [option] %&#125;\nright: 徽标右边的信息，必选参数，\nleft：徽标左边的信息，必选参数。\nlogo：徽标图标，图标名称详见 simpleicons，可选参数。\n\ncolor：徽标右边的颜色，可选参数。\n\nlink：指向的链接，可选参数。\ntitle：徽标的额外信息，可选参数。主要用于优化SEO，但 object 标签不会像 a 标签一样在鼠标悬停显示 title 信息。\n\noption：自定义参数，支持 shields.io 的全部API参数支持，具体参数可以参看上文中的拓展写法示例。形式为 name1=value2&amp;name2=value2。\n\n本外挂标签的参数分为三组，用 || 分割。\n\n\n\n基本参数,定义徽标左右文字和图标\n\n\n\n信息参数，定义徽标右侧内容背景色，指向链接\n\n\n\n拓展参数，支持shields的API的全部参数内容\n\n\n\n\n\n基本参数,定义徽标左右文字和图标\n &#123;% bdage Theme,Butterfly %&#125;&#123;% bdage Frame,Hexo,hexo %&#125;\n\n信息参数，定义徽标右侧内容背景色，指向链接\n &#123;% bdage CDN,JsDelivr,jsDelivr || abcdef,https://metroui.org.ua/index.html,本站使用JsDelivr为静态资源提供CDN加速 %&#125;// 如果是跨顺序省略可选参数，仍然需要写个逗号,用作分割&#123;% bdage Source,GitHub,GitHub || ,https://github.com/ %&#125;\n\n拓展参数，支持shields的API的全部参数内容\n &#123;% bdage Hosted,Vercel,Vercel || brightgreen,https://vercel.com/,本站采用双线部署，默认线路托管于Vercel||style=social&amp;logoWidth=20 %&#125;// 如果是跨顺序省略可选参数组，仍然需要写双竖线||用作分割&#123;% bdage Hosted,Vercel,Vercel || || style=social&amp;logoWidth=20&amp;logoColor=violet %&#125;\n\n\ninlineImg-内联图片与 butterfly 主题的 Butterfly InlineImg 用法一致。\n\nimage-单张图片标签语法配置参数样式预览示例源码&#123;% image 链接, width=宽度（可选）, height=高度（可选）, alt=描述（可选）, bg=占位颜色（可选） %&#125;\n图片宽度高度：width=300px, height=32px\n图片描述：alt=图片描述（butterfly 需关闭图片描述，否则描述会重复显示，即主题配置 photofigcaption: false ）\n占位背景色：bg=#f2f2f2\n\n添加描述：\n每天下课回宿舍的路，没有什么故事。\n\n指定宽度：\n\n\n指定宽度并添加描述：\n每天下课回宿舍的路，没有什么故事。\n\n设置占位背景色：\n优化不同宽度浏览的观感\n\n\n\n添加描述：\n &#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, alt=每天下课回宿舍的路，没有什么故事。 %&#125;\n\n指定宽度：\n &#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px %&#125;\n\n指定宽度并添加描述：\n &#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, alt=每天下课回宿舍的路，没有什么故事。 %&#125;\n\n设置占位背景色：\n &#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, bg=#1D0C04, alt=优化不同宽度浏览的观感 %&#125;\n\n\naudio-音频标签语法样式预览示例源码&#123;% audio 音频链接 %&#125;Your browser does not support the audio tag.&#123;% audio https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3 %&#125;\nvideo/videos-视频标签语法配置参数样式预览示例源码&#123;% videos [direction], [columns] %&#125;&#123;% video 视频链接 %&#125;&#123;% endvideos %&#125;\ndirection，对其方向：left, center, right\ncolumns，列数：支持 1～4 列。\n\n100%宽度，视频\nYour browser does not support the video tag.\n\n50%宽度，视频组\nYour browser does not support the video tag.\nYour browser does not support the video tag.\nYour browser does not support the video tag.\nYour browser does not support the video tag.\n\n25%宽度，视频组\nYour browser does not support the video tag.\nYour browser does not support the video tag.\nYour browser does not support the video tag.\nYour browser does not support the video tag.\nYour browser does not support the video tag.\nYour browser does not support the video tag.\nYour browser does not support the video tag.\nYour browser does not support the video tag.\n\n\n\n100%宽度，视频\n &#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %&#125;\n\n50%宽度，视频组\n &#123;% videos, 2 %&#125;&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %&#125;&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %&#125;&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %&#125;&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %&#125;&#123;% endvideos %&#125;\n\n25%宽度，视频组\n &#123;% videos, 4 %&#125;&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %&#125;&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %&#125;&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %&#125;&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %&#125;&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %&#125;&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %&#125;&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %&#125;&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %&#125;&#123;% endvideos %&#125;\n\n\ngallery/galleryGroup-相册与 butterfly 主题的 Butterfly-Gallery 用法一致。\n\npoem-诗词标签标签语法配置参数样式预览示例源码&#123;% poem [title], [author] %&#125;诗词内容&#123;% endpoem %&#125;\ntitle：诗词标题\nauthor：作者，可以不写\n水调歌头 苏轼丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。明月几时有？把酒问青天。不知天上宫阙，今夕是何年？我欲乘风归去，又恐琼楼玉宇，高处不胜寒。起舞弄清影，何似在人间？\n转朱阁，低绮户，照无眠。不应有恨，何事长向别时圆？人有悲欢离合，月有阴晴圆缺，此事古难全。但愿人长久，千里共婵娟。\n&#123;% poem 水调歌头,苏轼 %&#125;丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。明月几时有？把酒问青天。不知天上宫阙，今夕是何年？我欲乘风归去，又恐琼楼玉宇，高处不胜寒。起舞弄清影，何似在人间？转朱阁，低绮户，照无眠。不应有恨，何事长向别时圆？人有悲欢离合，月有阴晴圆缺，此事古难全。但愿人长久，千里共婵娟。&#123;% endpoem %&#125;\nbubble-气泡注释气泡注释，位于其他标签内部，显示会有异常。建议用原生HTML标签 例如 div 包裹起来。\n\n标签语法配置参数样式预览示例源码&#123;% bubble [content], [notation], [background-color] %&#125;\ncontent: 注释词汇\nnotation: 悬停显示的注解内容\nbackground-color: 可选，气泡背景色。默认为 “#71a4e3”\n\n最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的兄弟相邻选择器例如 h1 + p {margin-top:50px;}，flex布局Flex 是 Flexible Box 的缩写，意为弹性布局\"，用来为盒状模型提供最大的灵活性\"，transform变换transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。，animation的贝塞尔速度曲线贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋写法，还有今天刚看到的clip-pathclip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。\n最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的&#123;% bubble 兄弟相邻选择器,&quot;例如 h1 + p &#123;margin-top:50px;&#125;&quot; %&#125;，&#123;% bubble flex布局,&quot;Flex 是 Flexible Box 的缩写，意为&quot;弹性布局&quot;，用来为盒状模型提供最大的灵活性&quot;,&quot;#ec5830&quot; %&#125;，&#123;% bubble transform变换,&quot;transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。&quot;,&quot;#1db675&quot; %&#125;，animation的&#123;% bubble 贝塞尔速度曲线,&quot;贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋&quot;,&quot;#de4489&quot; %&#125;写法，还有今天刚看到的&#123;% bubble clip-path,&quot;clip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。&quot;,&quot;#868fd7&quot; %&#125;属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。\nreference-引用文献标签语法配置参数样式预览示例源码&#123;% referto [id], [literature] %&#125;&#123;% referfrom [id], [literature] ,[url] %&#125;考虑到锚点跳转的特性，不建议您将引用出处标签 referfrom 写在常隐外挂标签（如 folding、tab、hideToggle）中，这样能有效避免跳转失败。\n\n\n\nreferto 引用上标\n\nid: 上标序号内容，需与 referfrom 标签的 id 对应才能实现跳转\nliterature: 引用的参考文献名称\n\n\nreferfrom 引用出处\n\nid: 序号内容，需与 referto 标签的 id 对应才能实现跳转\nliterature: 引用的参考文献名称\nurl: 引用的参考文献链接，可省略\n\n\n\nAkilarの糖果屋(akilar.top)是一个私人性质的博客[1]Akilarの糖果屋群聊简介参考资料，从各类教程至生活点滴，无话不谈。建群的目的是提供一个闲聊的场所。博客采用Hexo框架[2]Hexo中文文档参考资料，Butterfly主题[3]Butterfly 安装文档(一) 快速开始参考资料\n\n本项目参考了Volantis[4]hexo-theme-volantis 标签插件参考资料的标签样式。引入`[tag].js`，并针对`butterfly`主题修改了相应的`[tag].styl`。在此鸣谢`Volantis`主题众开发者。\n主要参考内容包括各个volantis的内置标签插件文档[5]Volantis文档:内置标签插件参考资料\nButterfly主题的各个衍生魔改[6]Butterfly 安装文档:标签外挂（Tag Plugins参考资料[7]小弋の生活馆全样式预览参考资料[8]l-lin-font-awesome-animation参考资料[9]小康的butterfly主题使用文档参考资料\n\n[1]Akilarの糖果屋群聊简介\n[2]Hexo中文文档\n[3]Butterfly 安装文档(一) 快速开始\n[4]hexo-theme-volantis 标签插件\n[5]Volantis文档:内置标签插件\n[6]Butterfly 安装文档:标签外挂（Tag Plugins\n[7]小弋の生活馆全样式预览\n[8]l-lin-font-awesome-animation\n[9]小康的butterfly主题使用文档\nAkilarの糖果屋(akilar.top)是一个私人性质的博客&#123;% referto &#x27;[1]&#x27;,&#x27;Akilarの糖果屋群聊简介&#x27; %&#125;，从各类教程至生活点滴，无话不谈。建群的目的是提供一个闲聊的场所。博客采用Hexo框架&#123;% referto &#x27;[2]&#x27;,&#x27;Hexo中文文档&#x27; %&#125;，Butterfly主题&#123;% referto &#x27;[3]&#x27;,&#x27;Butterfly 安装文档(一) 快速开始&#x27; %&#125;本项目参考了Volantis&#123;% referto &#x27;[4]&#x27;,&#x27;hexo-theme-volantis 标签插件&#x27; %&#125;的标签样式。引入`[tag].js`，并针对`butterfly`主题修改了相应的`[tag].styl`。在此鸣谢`Volantis`主题众开发者。主要参考内容包括各个volantis的内置标签插件文档&#123;% referto &#x27;[5]&#x27;,&#x27;Volantis文档:内置标签插件&#x27; %&#125;Butterfly主题的各个衍生魔改&#123;% referto &#x27;[6]&#x27;,&#x27;Butterfly 安装文档:标签外挂（Tag Plugins&#x27; %&#125;&#123;% referto &#x27;[7]&#x27;,&#x27;小弋の生活馆全样式预览&#x27; %&#125;&#123;% referto &#x27;[8]&#x27;,&#x27;l-lin-font-awesome-animation&#x27; %&#125;&#123;% referto &#x27;[9]&#x27;,&#x27;小康的butterfly主题使用文档&#x27; %&#125;&#123;% referfrom &#x27;[1]&#x27;,&#x27;Akilarの糖果屋群聊简介&#x27;,&#x27;https://jq.qq.com/?_wv=1027&amp;k=pGLB2C0N&#x27; %&#125;&#123;% referfrom &#x27;[2]&#x27;,&#x27;Hexo中文文档&#x27;,&#x27;https://hexo.io/zh-cn/docs/&#x27; %&#125;&#123;% referfrom &#x27;[3]&#x27;,&#x27;Butterfly 安装文档(一) 快速开始&#x27;,&#x27;https://butterfly.js.org/posts/21cfbf15/&#x27; %&#125;&#123;% referfrom &#x27;[4]&#x27;,&#x27;hexo-theme-volantis 标签插件&#x27;,&#x27;https://volantis.js.org/v5/tag-plugins/&#x27; %&#125;&#123;% referfrom &#x27;[5]&#x27;,&#x27;Volantis文档:内置标签插件&#x27;,&#x27;https://volantis.js.org/tag-plugins/&#x27; %&#125;&#123;% referfrom &#x27;[6]&#x27;,&#x27;Butterfly 安装文档:标签外挂（Tag Plugins&#x27;,&#x27;https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89&#x27; %&#125;&#123;% referfrom &#x27;[7]&#x27;,&#x27;小弋の生活馆全样式预览&#x27;,&#x27;https://lovelijunyi.gitee.io/posts/c898.html&#x27; %&#125;&#123;% referfrom &#x27;[8]&#x27;,&#x27;l-lin-font-awesome-animation&#x27;,&#x27;https://github.com/l-lin/font-awesome-animation&#x27; %&#125;&#123;% referfrom &#x27;[9]&#x27;,&#x27;小康的butterfly主题使用文档&#x27;,&#x27;https://www.antmoe.com/posts/3b43914f/&#x27; %&#125;\ncarousel-旋转相册旋转相册标签与 fancybox 灯箱存在兼容性 bug，若发现旋转相册呈扁平状，请关闭 fancybox 或换用 medium_zoom。建议用原生 HTML 标签 例如 div 包裹起来。\n\n标签语法配置参数样式预览示例源码&#123;% carousel [id], [name] %&#125;![](/img/1.jpg)![](/img/2.jpg)![](/img/3,jpg)&#123;% endcarousel %&#125;\nid: 相册唯一 ID，用于监测相册鼠标动作。禁止使用中文。同一页内不得出现相同 ID 的 carousel 相册。\nname: 相册中间显示的内容，建议用英文单引号包裹。\n\nstrike freedomcarouselinit('SF');\n&#123;% carousel &#x27;SF&#x27;,&#x27;strike freedom&#x27; %&#125;![](https://npm.elemecdn.com/akilar-candyassets/image/20200907110444226.png)![](https://npm.elemecdn.com/akilar-candyassets/image/20200907110508327.png)![](https://npm.elemecdn.com/akilar-candyassets/image/20200907110525753.png)![](https://npm.elemecdn.com/akilar-candyassets/image/20200907110600751.png)![](https://npm.elemecdn.com/akilar-candyassets/image/20200907110621554.png)![](https://npm.elemecdn.com/akilar-candyassets/image/20200907110637459.png)![](https://npm.elemecdn.com/akilar-candyassets/image/20200907110654150.png)![](https://npm.elemecdn.com/akilar-candyassets/image/20200907110707916.png)![](https://npm.elemecdn.com/akilar-candyassets/image/20200907110719787.png)![](https://npm.elemecdn.com/akilar-candyassets/image/20200907110731118.png)&#123;% endcarousel %&#125;\nwow-特效标签需要安装 hexo-butterfly-wowjs 插件，并且开启插件功能后，此标签才会生效。\n\n标签语法配置参数样式预览示例源码&#123;% wow [animete], [duration], [delay], [offset], [iteration] %&#125;内容&#123;% endwow %&#125;\nanimate: 动画样式，效果详见 animate.css参考文档\nduration: 选填项，动画持续时间，单位可以是 ms 也可以是 s。例如 3s，700ms。\ndelay: 选填项，动画开始的延迟时间，单位可以是 ms 也可以是 s。例如 3s，700ms。\noffset: 选填项，开始动画的距离（相对浏览器底部）\niteration: 选填项，动画重复的次数\n\n注意，后面四个虽然是选填项，但是当有跨位选填时，次序不能乱。详见示例。支持嵌套其他外挂标签。\n\nflip 动画效果。\n   flip动画效果。\n\n\n\nzoomIn 动画效果，持续5s，延时5s，离底部100距离时启动，重复10次。\n   zoomIn动画效果，持续5s，延时5s，离底部100距离时启动，重复10次\n\n\n\nslideInRight 动画效果，持续5s，延时5s。\n   slideInRight动画效果，持续5s，延时5s。\n\n\n\nheartBeat 动画效果，延时5s，重复10次。此处注意不用的参数位置要留空，用逗号间隔。\n   heartBeat动画效果，延时5s，重复10次。\n\n\n\n\n\nflip 动画效果。\n &#123;% wow animate__flip %&#125;&#123;% note green &#x27;fas fa-fan&#x27; modern %&#125;`flip`动画效果。&#123;% endnote %&#125;&#123;% endwow %&#125;\n\nzoomIn 动画效果，持续5s，延时5s，离底部100距离时启动，重复10次。\n &#123;% wow animate__zoomIn,5s,5s,100,10 %&#125;&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern %&#125;`zoomIn`动画效果，持续`5s`，延时`5s`，离底部`100`距离时启动，重复`10`次&#123;% endnote %&#125;&#123;% endwow %&#125;\n\nslideInRight 动画效果，持续5s，延时5s。\n &#123;% wow animate__slideInRight,5s,5s %&#125;&#123;% note orange &#x27;fas fa-car&#x27; modern %&#125;`slideInRight`动画效果，持续`5s`，延时`5s`。&#123;% endnote %&#125;&#123;% endwow %&#125;\n\nheartBeat 动画效果，延时5s，重复10次。此处注意不用的参数位置要留空，用逗号间隔。\n &#123;% wow animate__heartBeat,,5s,,10 %&#125;&#123;% note red &#x27;fas fa-battery-half&#x27; modern %&#125;`heartBeat`动画效果，延时`5s`，重复`10`次。&#123;% endnote %&#125;&#123;% endwow %&#125;\n\n","categories":["语法文档"],"tags":["Hexo"]},{"title":"Butterfly 主题应用","url":"/posts/f7494f28.html","content":"Butterfly 是 Hexo 生态中广受欢迎的高颜值主题。\n本文将系统记录 Butterfly 主题在 Hexo 的完整应用，以及深度定制过程。\n主题安装在博客项目根目录，执行以下命令：\ngit clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly\n然后把 /themes/butterfly/.git/ 删掉，这是主题项目的 git 管理，会影响到主项目的 git 管理。\n安装渲染插件：\nnpm install hexo-renderer-pug hexo-renderer-stylus --save\n把主题的配置文件 /themes/butterfly/_config.yml 复制到根目录下，重命名为 _config.butterfly.yml，后续对主题的配置修改，都在这个文件了。因为升级主题时，会将整个 /themes/butterfly/ 覆盖，自定义配置就会丢失，所以将配置拿出来。\n修改 _config.yml，应用 butterfly 主题：\n_config.ymltheme: butterfly\n重启项目，就可以看到博客网站，颜值大大提高了。\n主题页面butterfly 主题，自定义了一些 Front-matter，官方文档请见：Butterfly 文檔(三) 主題配置 | Butterfly可将这些 Front-matter，复制到 /scaffolds/ 下对应的 page.md 和 post.md 模板中，后续新建页面或文章，这些 Front-matter 就会自动出现在文章了。\n按照官方教程，新建特殊页面：标签、分类、友链、说说。其中友链、说说的数据源，可以放在本地 /source/_data/ 下，对应 link.yml 和 shuoshuo.yml。\n新建普通页面，相册库，以及默认相册。新建普通页面，关于我。\n开启 404 页面，在 _config.butterfly.yml 中配置：\n_config.butterfly.yml# A simple 404 pageerror_404:  enable: true\n主题配置个性化总览修改主题配置文件 _config.butterfly.yml，进行个性化设置。\n官方文档请见：Butterfly 文檔(三) 主題配置 | Butterfly\n记录我的个性化配置：\n_config.butterfly.ymlnav:  fixed: truemenu:  首页: / || fas fa-home  文章 || fas fa-list:    时间轴: /archives/ || fas fa-archive    标签: /tags/ || fas fa-tags    分类: /categories/ || fas fa-folder-open  收藏 || fas fa-star:    照片: /gallery/ || fas fa-images#    音乐: /music/ || fas fa-music#    电影: /movies/ || fas fa-video    推荐: /link/ || fas fa-external-link-alt  留言板: /comments/ || fas fa-envelope  随笔: /shuoshuo/ || fas fa-comment-dots  关于: /about/ || fas fa-heartcode_blocks:  theme: darker  macStyle: true  height_limit: 300social:  #  fab fa-github: https://github.com/lijiabao9 || Github || &#x27;#24292e&#x27;  fas fa-envelope: mailto:ljiabao9@gmail.com || Email || &#x27;#4a7dbe&#x27;favicon: https://cdn.jsdelivr.net/gh/lijiabao9/lijiabao9.pic.cloud@main/hexo/info/favicon.webpavatar:  img: https://cdn.jsdelivr.net/gh/lijiabao9/lijiabao9.pic.cloud@main/hexo/info/avatar.webpdefault_top_img: https://cdn.jsdelivr.net/gh/lijiabao9/lijiabao9.pic.cloud@main/hexo/info/site-top.webpbackground: https://cdn.jsdelivr.net/gh/lijiabao9/lijiabao9.pic.cloud@main/hexo/info/site-background-2.webpcover:  default_cover:    - https://cdn.jsdelivr.net/gh/lijiabao9/lijiabao9.pic.cloud@main/hexo/info/cover.webperror_404:  enable: true  subtitle: &#x27;青石巷深灯火尽，云外仙踪不可寻&#x27;subtitle:  enable: true  source: 3  sub:    - Just Do it    - 代码改变世界，文字记录思考index_layout: 1toc:  expand: truereward:  enable: true  text:  QR_code:    - img: https://cdn.jsdelivr.net/gh/lijiabao9/lijiabao9.pic.cloud@main/hexo/info/wechat.webp      link:      text: wechat    - img: https://cdn.jsdelivr.net/gh/lijiabao9/lijiabao9.pic.cloud@main/hexo/info/alipay.webp      link:      text: alipaynoticeOutdate:  enable: truefooter:  nav:#    - content:#        - title: 框架#          item:#            - title: Hexo#              url: https://hexo.io/zh-cn/#            - title: Butterfly#              url: https://butterfly.js.org/  custom_text: &#x27;🚧 施工中 | 这是一个程序员用代码和咖啡构建的思维城堡 💻☕ | Bug和灵感同样欢迎！&#x27;aside:  card_author:    link: https://github.com/lijiabao9  card_announcement:    content: &#x27;新手上路 | 这里记录着从 Hello World 到 Hello Universe 的每一步探索 🌌&#x27;  card_tags:    color: true  card_webinfo:    runtime_date: 2025/09/22translate:  enable: truerightside_scroll_percent: trueanchor:  click_to_scroll: truecopy:  copyright:    enable: true# 需要安装插件wordcount:  enable: true# 需要更换渲染插件，以及插件配置math:  use: mathjax# 需要安装插件，以及插件配置search:  use: local_searchbeautify:  enable: true  field: site  title_prefix_icon: &#x27;\\f863&#x27;  title_prefix_icon_color: &#x27;#F47466&#x27;activate_power_mode:  enable: true  shake: falsecanvas_nest:  enable: trueclick_heart:  enable: truelightbox: fancyboxseries:  enable: trueabcjs:  enable: truemermaid:  enable: truechartjs:  enable: truepjax:  enable: truesnackbar:  enable: true  position: bottom-centerinstantpage: truelazyload:  enable: true# 需要安装插件，以及插件配置，以及 div 注入aplayerInject:  enable: trueinject:  bottom:    ## 音乐播放器注入，于此配置 歌单信息 data-id=“2761236917”    - &lt;div class=&quot;aplayer no-destroy&quot; data-id=&quot;2761236917&quot; data-server=&quot;netease&quot; data-type=&quot;playlist&quot; data-order=&quot;list&quot; data-fixed=&quot;true&quot; data-preload=&quot;auto&quot; data-autoplay=&quot;false&quot; data-mutex=&quot;true&quot;&gt;&lt;/div&gt;\n上面的某些功能，需要安装插件支持。\nwordcount字数统计，直接安装插件即可。\nnpm install hexo-wordcount --save\n在配置 _config.butterfly.yml 开启功能。\n_config.butterfly.ymlwordcount:  enable: true\nmath数学公式，使用 mathjax 方式，需要更换渲染插件，以及进行插件配置：\nnpm uninstall hexo-renderer-marked --savenpm install hexo-renderer-kramed --save\n在 _config.yml 中配置插件。\n_config.ymlkramed:  gfm: true           # Enables GitHub flavored markdown  pedantic: false     # Conform to obscure parts of markdown.pl as much as possible.  sanitize: false     # Sanitize the output. Ignore any HTML that has been input.  tables: true        # Enable GFM tables. This option requires the gfm option to be true.  breaks: true        # Enable GFM line breaks. This option requires the gfm option to be true.  smartLists: true    # Use smarter list behavior than the original markdown.  smartypants: true   # Use &quot;smart&quot; typograhic punctuation for things like quotes and dashes.\n在配置 _config.butterfly.yml 开启功能。\n_config.butterfly.ymlmath:  use: mathjax\nsearch本地搜索，需要安装插件，以及插件配置。\nnpm install hexo-generator-searchdb --save\n在 _config.yml 中配置插件。\n_config.ymlsearch:  path: search.json   # the path to the generated database file  field: post         # the search scope you want to search. post / page / all  content: true       # whether contains the whole content of each article  format: striptags   # the form of the page contents. striptags / html / raw\n在配置 _config.butterfly.yml 开启功能。\n_config.butterfly.ymlsearch:  use: local_search\nAPlayer音乐播放器，全局吸底设置。\n官方文档请见：Butterfly添加全局吸底Aplayer教程 | Butterfly\n安装插件：\nnpm install hexo-tag-aplayer --save\n在 _config.yml 中添加插件配置，关闭资源注入，交给 butterfly 主题处理：\n_config.ymlaplayer:  meting: true          # Meting support, default: false  asset_inject: false   # Auto asset injection, default: true\n在 _config.butterfly.yml 中开启播放器功能，注入歌单div。\n_config.butterfly.ymlaplayerInject:  enable: true  per_page: trueinject:  bottom:    - &lt;div class=&quot;aplayer no-destroy&quot; data-id=&quot;2761236917&quot; data-server=&quot;netease&quot; data-type=&quot;playlist&quot; data-order=&quot;list&quot; data-fixed=&quot;true&quot; data-preload=&quot;auto&quot; data-autoplay=&quot;false&quot; data-mutex=&quot;true&quot;&gt;&lt;/div&gt;\n增强插件(可选)文章置顶轮播插件官方主页请看：hexo-butterfly-swiper\n用法：在要置顶的文章的 Front-matter，增加 swiper_index: 1,，数字越大越靠前，最多建议不超过 10 篇。\n\n安装插件：\nnpm install hexo-butterfly-swiper --save\n在 _config.butterfly.yml 配置插件：\n_config.butterfly.ymlswiper:    enable: true    # 开关    priority: 5     # 过滤器优先权。数值越小，执行越早    enable_page: /  # 应用页面。若要应用于所有页面，就填 &#x27;all&#x27;    exclude:        # 屏蔽页面。仅当 enable_page 为 &#x27;all&#x27; 时生效    timemode: date  # 时间显示。date/updated    layout:         # 挂载容器类型        type: id        name: recent-posts        index: 0    insertposition: afterbegin      # 插入位置。beforebegin / afterbegin / beforeend / afterend    error_img: https://cdn.jsdelivr.net/gh/lijiabao9/lijiabao9.pic.cloud@main/hexo/info/cover.webp     # 封面图片加载失败的默认封面    default_descr: 再怎么看我也不知道怎么描述它的啦！    # 默认文章描述    swiper_css: https://npm.elemecdn.com/hexo-butterfly-swiper/lib/swiper.min.css    # swiper css依赖    swiper_js: https://npm.elemecdn.com/hexo-butterfly-swiper/lib/swiper.min.js      # swiper js依赖    custom_css: https://npm.elemecdn.com/hexo-butterfly-swiper/lib/swiperstyle.css   # 适配主题样式补丁    custom_js: https://npm.elemecdn.com/hexo-butterfly-swiper/lib/swiper_init.js     # swiper初始化方法\n薇尔莉特信封插件官方主页请看：hexo-butterfly-envelope\n用法：在导航栏，menu 处增加对应菜单即可。\n留言板: /comments/ || fas fa-envelope\n\n插件安装：\nnpm install hexo-butterfly-envelope --save\n在 _config.butterfly.yml 配置插件：\n_config.butterfly.ymlenvelope_comment:  enable: true                        # 控制开关  custom_pic:    cover: https://cdn.jsdelivr.net/gh/lijiabao9/lijiabao9.pic.cloud@main/hexo/info/envelope-violet.webp       # 信笺头部图片    line: https://cdn.jsdelivr.net/gh/lijiabao9/lijiabao9.pic.cloud@main/hexo/info/envelope-line.webp          # 信笺底部图片    beforeimg: https://cdn.jsdelivr.net/gh/lijiabao9/lijiabao9.pic.cloud@main/hexo/info/envelope-before.webp   # 信封前半部分    afterimg: https://cdn.jsdelivr.net/gh/lijiabao9/lijiabao9.pic.cloud@main/hexo/info/envelope-after.webp     # 信封后半部分  message:                            # 信笺正文，多行文本，写法如下    - 「纸短情长，墨香留痕——你想诉说什么故事？」    - 「晨露与星辉之间，我在此倾听你的每一声轻语。」    - 「字句如蝶，栖于此处。是思考，是倾诉，或只是片刻心情？」    - 「这里盛放未完成的诗、半截灵感，和所有欲言又止的黄昏。」  bottom: 「此处永远有月光铺就的纸笺！」    # 仅支持单行文本  height:           # 1050px，信封划出的高度  path:             #【可选】comments 的路径名称。默认为 comments，生成的页面为 comments/index.html  front_matter:     #【可选】comments 页面的 front_matter 配置    title: 留言板    comments: true\nwowjs特效插件主页请看：hexo-butterfly-wowjs\n插件安装：\nnpm install hexo-butterfly-wowjs --save\n在 _config.butterfly.yml 配置插件：\n_config.butterfly.ymlwowjs:  enable: false        # 控制动画开关。true是打开，false是关闭  priority: 10        # 过滤器优先级  mobile: false       # 移动端是否启用，默认移动端禁用  animateitem:    ## 首页的文章    - class: recent-post-item   # 必填项，需要添加动画的元素的 class      style: animate__zoomIn    # 必填项，需要添加的动画      duration: 1.5s            # 选填项，动画持续时间，单位可以是 ms 也可以是 s。例如 3s，700ms。      delay: 200ms              # 选填项，动画开始的延迟时间，单位可以是 ms 也可以是 s。例如 3s，700ms。      offset: 30                # 选填项，开始动画的距离（相对浏览器底部）      iteration: 1              # 选填项，动画重复的次数    ## 侧边栏卡片    - class: card-widget      style: animate__zoomIn      delay: 200ms  animate_css: https://cdn.cbd.int/hexo-butterfly-wowjs/lib/animate.min.css  wow_js: https://cdn.cbd.int/hexo-butterfly-wowjs/lib/wow.min.js  wow_init_js: https://cdn.cbd.int/hexo-butterfly-wowjs/lib/wow_init.js\n外挂标签plus插件官方主页请看：hexo-butterfly-tag-plugins-plus\n插件安装：\nnpm install hexo-butterfly-tag-plugins-plus --save\n在 _config.butterfly.yml 配置插件：\n_config.butterfly.ymlinject:  head:    ## 引入是为了 tag-plugins-plus 的 tip 自定义图标功能    - &lt;link rel=&quot;stylesheet&quot; href=&quot;https://npm.elemecdn.com/@fortawesome/fontawesome-free@latest/css/all.min.css&quot;&quot;&gt;tag_plugins:  enable: true    # 【必选】控制开关  priority: 5     # 【可选】过滤器优先级，数值越小，执行越早，默认为 10，选填  issues: false   # 【可选】issues 标签控制开关，默认为 false  link:           # 【必选】link 卡片外挂标签的默认图标    placeholder: https://cdn.jsdelivr.net/gh/lijiabao9/lijiabao9.pic.cloud@main/hexo/info/link-card.webp  CDN:    # 【可选】动画标签 anima 的依赖    anima: https://cdn.cbd.int/hexo-butterfly-tag-plugins-plus@latest/lib/assets/font-awesome-animation.min.css    # 【可选】issues 标签依赖#    jquery: https://cdn.cbd.int/jquery@latest/dist/jquery.min.js#    issues: https://cdn.cbd.int/hexo-butterfly-tag-plugins-plus@latest/lib/assets/issues.js    # 【可选】carousel 旋转相册标签鼠标拖动依赖，如果不想引入则设为 false#    carousel: https://cdn.cbd.int/hexo-butterfly-tag-plugins-plus@latest/lib/assets/carousel-touch.js    # 【可选】外挂标签样式的 CSS 依赖，为避免 CDN 缓存延迟，建议将 @latest 改为具体版本号    tag_plugins_css: https://cdn.cbd.int/hexo-butterfly-tag-plugins-plus@latest/lib/tag_plugins.css    # 【可选】icon 标签 symbol 样式引入，如果不想引入，则设为 false    iconfont: /assets/js/ali_icon_font.js\n需要替换渲染插件为 hexo-renderer-kramed。和 mathjax 是一样的，操作请看 math。\n标签 tip 的自定义图标，需要通过 inject 引入特定样式。\n标签 icon 需要引入自定图标 js 文件，图标在 iconfont 处下载。\n标签 wow 需要安装开启并开启插件 hexo-butterfly-wowjs。\n\nlive2d人偶插件官方主页请看：hexo-oh-my-live2d\n安装插件：\nnpm install hexo-oh-my-live2d --save\n在 _config.yml 配置插件（在主题配置文件会不生效）：\n_config.ymlOhMyLive2d:  enable: true  CDN: https://unpkg.com/oh-my-live2d  option:    dockedPosition: &#x27;left&#x27;            # 模型停靠位置。可选值: &#x27;left&#x27; | &#x27;right&#x27;    parentElement: document.body      # 为组件提供一个父元素，如果未指定则默认挂载到 body 中    primaryColor: &#x27;#87C6A3&#x27;           # 主题色，支持变量    sayHello: false                   # 是否在初始化阶段打印项目信息，默认：true    transitionTime: 1000              # 组件入场和离开的过渡动画时长,单位 ms    initialStatus: &#x27;active&#x27;           # 首次访问时，设置初始状态是否处于睡眠状态或活动状态。可选值：&#x27;sleep&#x27; | &#x27;active&#x27;    mobileDisplay: false              # 是否在移动端显示    stageStyle:                       # 舞台css样式，可在每个模型中再单独设置      bottom: 80px    models:                           # 模型配置，可支持多个模型切换      - name: &#x27;纳西妲&#x27;        path: /assets/live2d_models/Nahida_1080/Nahida_1080.model3.json        scale: 0.05    # 具体方法请看: https://oml2d.com/guide/loadModel.html#oml2d-%E5%AE%9E%E4%BE%8B    #    then: |    #     oml2d.onStageSlideIn(() =&gt; &#123;    #       oml2d.tipsMessage(&#x27;Oh My Live2D !!!&#x27;, 3000, 10);    #     &#125;);    # 配置提示框。模型上方弹出的气泡    tips:      messageLine: 3                  # 消息限制展示的行数, 默认3行, 超出将会在消息结尾加上省略号      # 提示框css样式。默认宽度为舞台的60%, 最小高度为 100px, 内容默认垂直水平居中      style:        width: 200        height: 100        left: calc(50% + 40px)        top: -100px        font-size: 16px        color: &#x27;#E0FFF5&#x27;        border-radius: &#x27;10px&#x27;        border: &#x27;1px solid rgba(175, 230, 190, 0.7)&#x27;        backdrop-filter: &#x27;blur(8px) saturate(1.8)&#x27;        box-shadow: &#x27;inset 0 0 15px rgba(180, 255, 200, 0.3), 0 2px 5px rgba(0, 0, 0, 0.1)&#x27;      # 复制网站文字内容时的提示。（复制代码框时不会起效）      copyTips:        duration: 3000     # 提示框持续时间, 单位 ms        priority: 2        # 优先级, 高优先级消息将会覆盖低优先级的消息        # 播放的消息内容, 需要是一个字符串数组, 播放时会从中随机取出一条进行提示, 空数组则不播放        message:          - 字句如露，采撷时请记得留一片云作为归处~          - 墨香未干，思绪尚温，转载时请为故事保留来时的路标~          - 这些句子曾在月光下晾晒，若你收藏，请保留它们晒过的那轮月亮~          - 文字如蝶，轻拈时请莫折损它的翅膀，转载时请注明这片花园的名字~          - 每个字都带着作者的体温，若你喜欢，请记得它最初安家的地方~      # 模型入场后的欢迎提示      welcomeTips:        duration: 6000    # 提示框持续时间, 单位 ms        priority: 3       # 优先级, 高优先级消息将会覆盖低优先级的消息        message:          # 早晨 5-7 点提示信息内容. &quot;早上好！一日之计在于晨，美好的一天就要开始了。&quot;          daybreak: 「晨露未晞时，世界正轻轻醒来。愿今日的光，都落在你的期待上」          # 早上 8-11 点提示信息内容. &quot;上午好！工作顺利嘛，不要久坐，多起来走动走动哦！&quot;          morning: 「朝云染窗棂，纸笔相候多时。若觉倦了，不妨与风共舞片刻」          # 中午 12-13 点提示信息内容. &quot;中午了，工作了一个上午，现在是午餐时间！&quot;          noon: 「日影正中天，且将心事暂搁。一箸春蔬，半盏清茶，都是光阴的馈赠」          # 下午 14-17 点提示信息内容. &quot;午后很容易犯困呢，来杯咖啡吧~&quot;          afternoon: 「蝉鸣在帘外织网，困意如潮汐漫涨。你手边那杯茶，正温着整个下午」          # 傍晚 18-19 点提示信息内容. &quot;傍晚了！工作一天辛苦啦~&quot;          dusk: 「暮色像缓缓合上的书页，而你是今天最美的句读」          # 晚上 20-21 点提示信息内容. &quot;晚上好，今天过得怎么样呢？&quot;          night: 「星子开始研磨墨汁，要不要把今天的故事，再说给月亮听？」          # 深夜 22-23 点提示信息内容. ”已经这么晚了呀，早点休息吧，晚安~“          lateNight: 「灯火已瘦，睡意正稠。让枕头接住你所有未完成的梦」          # 凌晨 0-4 点提示信息内容. “这么晚还不睡吗？当心熬夜秃头哦！”          weeHours: 「整个银河都在你眼里打盹，而睫毛成了最后的守夜人」      # 闲置状态下的提示      idleTips:        duration: 20000   # 提示框持续时间, 单位 ms        priority: 1       # 优先级, 高优先级消息将会覆盖低优先级的消息        interval: 60000   # 闲置状态循环播放消息的间隔时间, 单位 ms        # 自定义提示语 需要 引入 axios 库 ,也可以使用其他方法        #        message: |        #          function()&#123;        #            return axios.get(&#x27;https://v1.hitokoto.cn?c=i&#x27;)        #              .then(function (response) &#123;        #                return response.data.hitokoto ;        #              &#125;)        #              .catch(function (error) &#123;        #                console.error(error);        #              &#125;);        #          &#125;        # 是否开启每日一言, 默认为关闭状态, 开启后将从 https://v1.hitokoto.cn 发送网络请求, 并将请求到的随机信息作为闲置提示内容        # 开启后将接管闲置状态下 message 选项设定的值        wordTheDay: |          function(wordTheDayData)&#123;            return `$&#123;wordTheDayData.hitokoto&#125;    by.$&#123;wordTheDayData.from&#125;`;          &#125;    # 状态栏    statusBar:      # 是否禁用状态条, 为true时将不会创建状态条      disable: false      # 配置状态条样式      style:        color: &#x27;#40f4d9&#x27;      # 加载异常时展示的背景色      errorColor: &#x27;#f40505&#x27;      # 模型休息状态时提示的文本信息      restMessage: &#x27;茶烟歇处，伊人暂隐&#x27;    # 模型右侧的菜单栏配置，defaultItems 分别是 休息、切换衣服、切换模型、官方网站    menus:      # 是否禁用菜单, 为true时将不会创建菜单      disable: false      # 配置菜单整体样式      style:        display: &#x27;flex&#x27;        flex-direction: &#x27;column&#x27;        flex-wrap: &#x27;wrap&#x27;        max-height: &#x27;160px&#x27;        gap: &#x27;5px&#x27;        right: unset        left: 150px      # 配置菜单每个子项按钮的样式      # itemStyle:      # 如果不需要使用默认的菜单（休息、切换衣服、切换模型、插件官网），可以直接将 items 配置成普通的列表（id/icon/title/onClick）      # icon 默认仅支持 [&#x27;icon-loading&#x27;, &#x27;icon-rest&#x27;, &#x27;icon-switch&#x27;, &#x27;icon-about&#x27;]，可引入阿里巴巴矢量图标      # onClick(oml2d)，注入的对象，可使用方法参见：https://oml2d.hacxy.cn/api/interfaces/Oml2dMethods.html      items: |        (defaultItems) =&gt; &#123;          return [            defaultItems[0],            &#123;              id: &#x27;startTipsIdle&#x27;,              title: &#x27;聆听梦境&#x27;,              icon: &#x27;icon-network-conn&#x27;,              onClick: (oml2d) =&gt; &#123; oml2d.startTipsIdle(); oml2d.tipsMessage(&#x27;嘘，让我们一起听听，世界树的叶脉里都流淌着哪些秘密…！&#x27;, 1000, 4); &#125;            &#125;,            &#123;              id: &#x27;stopTipsIdle&#x27;,              title: &#x27;独享此刻&#x27;,              icon: &#x27;icon-network-dis-conn&#x27;,              onClick: (oml2d) =&gt; &#123; oml2d.stopTipsIdle(); oml2d.tipsMessage(&#x27;已从「虚空」网络安全断开，你的思绪现在只属于你了。&#x27;, 1000, 4); &#125;            &#125;,            &#123;              id: &#x27;randomMusic&#x27;,              title: &#x27;随机音乐&#x27;,              icon: &#x27;icon-music&#x27;,              onClick: (oml2d) =&gt; &#123; const msg = window.live2dToolkit.playRandomMusic(); oml2d.tipsMessage(msg, 1000, 4); &#125;            &#125;,            &#123;              id: &#x27;play-pause&#x27;,              title: &#x27;播放/暂停&#x27;,              icon: &#x27;icon-vynil&#x27;,              onClick: (oml2d) =&gt; &#123; const msg = window.live2dToolkit.togglePlayPause(); oml2d.tipsMessage(msg, 1000, 4); &#125;            &#125;,            &#123;              id: &#x27;jump2randomPost&#x27;,              title: &#x27;世界树回响&#x27;,              icon: &#x27;icon-zu&#x27;,              onClick: (oml2d) =&gt; &#123; const msg = window.live2dToolkit.jump2randomPost(); oml2d.tipsMessage(msg, 2000, 4); &#125;            &#125;          ]        &#125;\n模型文件，可以从网上寻找替换。\n菜单项的 随机音乐、播放/暂停、世界树回想 功能，需要注入脚本。\n_config.butterfly.ymllive2d-toolkit.jsgenerator-posts.js_config.butterfly.ymlinject:  head:    - &lt;script src=&quot;/assets/js/live2d-toolkit.js&quot;&gt;&lt;/script&gt;功能脚本文件放在 /assets/js/live2d-toolkit.js。\nlive2d-toolkit.js/* 工具方法，作用于 live2d 人偶的菜单功能注入 */if (!window.live2dToolkit) &#123;    const tk = &#123;&#125;;    window.live2dToolkit = tk;    // --------------------------------------------- 辅助函数 ---------------------------------------------    function randomIndex(length) &#123;        return Math.floor(Math.random() * length);    &#125;    function randomItem(arr) &#123;        let idx = randomIndex(arr.length);        return arr[idx];    &#125;    function htmlIsPost() &#123;        let wrapBody = document.getElementById(&#x27;body-wrap&#x27;);        return wrapBody &amp;&amp; wrapBody.className === &#x27;post&#x27;    &#125;    // ---------------------------------------------- butterfly 功能区 ------------------------------------    /**     * 回到顶部     */    tk.goUp = () =&gt; &#123;        if (window.btf &amp;&amp; typeof window.btf.scrollToDest === &#x27;function&#x27;) &#123;            window.btf.scrollToDest(0, 500);            const successMessages = [                &#x27;草元素电梯启动~咻！&#x27;,                &#x27;让风带我们回到起点吧&#x27;,                &#x27;在提瓦特，这叫「四叶印快速移动」哦&#x27;,            ];            return randomItem(successMessages);        &#125;        const failureMessages = [            &#x27;唔…今天的风似乎吹不动呢。&#x27;,            &#x27;诶？通往高处的路径好像消失了。&#x27;,            &#x27;好像…找不到可以快速移动的四叶印呢。&#x27;,        ];        return randomItem(failureMessages);    &#125;    /**     * 切换白天/夜间模式     */    tk.toggleTheme = () =&gt; &#123;        const DARK_THEME = &#x27;dark&#x27;;        const LIGHT_THEME = &#x27;light&#x27;;        const prevIsDark = (DARK_THEME === document.documentElement.dataset.theme);        const newTheme = prevIsDark ? LIGHT_THEME : DARK_THEME;        document.documentElement.setAttribute(&#x27;data-theme&#x27;, newTheme);        const messages = prevIsDark ? [            &#x27;看，知识的种子正在阳光下发芽呢 🌱&#x27;,            &#x27;让智慧的光芒，洒满世界的每个角落吧。&#x27;,            &#x27;白天的世界，也藏着不一样的答案哦。&#x27;,            &#x27;梦境散去，是时候迎接新的知识啦~&#x27;,        ] : [            &#x27;月光为墨，星辰为笔，来记录今天的智慧吧 ✨&#x27;,            &#x27;晚安，旅行者。愿你在梦中与智慧相伴。&#x27;,            &#x27;嘘~ 让思绪在宁静的星空下沉淀…&#x27;,            &#x27;知识的树洞里，点亮了梦的灯火。&#x27;,        ];        return randomItem(messages);    &#125;    /**     * 切换侧边栏显示/隐藏     */    tk.toggleAside = () =&gt; &#123;        const currIsHidden = document.documentElement.classList.toggle(&#x27;hide-aside&#x27;);        const messages = currIsHidden ? [            &#x27;世界的梦境，暂时只需要一个焦点就够了。&#x27;,            &#x27;让智慧之树的叶片暂时合上吧，月光会为它们镀上银边。&#x27;,            &#x27;有些秘密，要藏在看不见的地方才能发酵哦。&#x27;,            &#x27;断开冗余的连接，让思绪回归到主干上。&#x27;,        ] : [            &#x27;智慧的宝库已为你敞开一角，想先从哪枚符文看起呢？&#x27;,            &#x27;看，知识之树又长出了新的枝条，上面挂满了答案的露珠。&#x27;,            &#x27;连接世界的梦境网络，新的通路已构建完成✦&#x27;,            &#x27;旁边的书架上，似乎有你感兴趣的故事呢。&#x27;,        ];        return randomItem(messages);    &#125;    /**     * 将网页进行简繁体转换     */    tk.translatePage = () =&gt; &#123;        if (window.translateFn &amp;&amp; typeof window.translateFn !== &#x27;function&#x27;) &#123;            window.translateFn.translatePage();            const successMessages = [                &#x27;看，同样的智慧，也可以用不同的符文来书写哦。&#x27;,                &#x27;文字换上了新装，你发现其中的奥秘了吗？&#x27;,                &#x27;换个角度看世界，说不定会有新的发现呢✦&#x27;,                &#x27;这些文字…好像在诉说着一段不一样的历史。&#x27;,                &#x27;知识的溪流，汇入了另一条分支呢。&#x27;,            ];            return randomItem(successMessages);        &#125;        const failureMessages = [            &#x27;唔…解读这些古老符文的石板好像不见了。&#x27;,            &#x27;这些文字…好像暂时只能保持现在的模样呢。&#x27;,            &#x27;转换文字形态的力量，今天似乎在沉睡。&#x27;        ];        return randomItem(failureMessages);    &#125;    /**     * 阅读模式     */    tk.readMode = () =&gt; &#123;        const $body = document.body;        // 判断当前页面，是否为 文章        if (!htmlIsPost()) &#123;            const failureMessages = [                &#x27;这里没有可以阅读的卷轴哦~&#x27;,                &#x27;知识的梦境只在故事之页展开呢。&#x27;,                &#x27;请先找到一扇知识之门吧✦&#x27;,            ];            return randomItem(failureMessages);        &#125;        // 已经是阅读模式        if ($body.classList.contains(&#x27;read-mode&#x27;)) &#123;            const failureMessages = [                &#x27;嘘~你已身在梦境之中啦。&#x27;,                &#x27;知识的卷轴早已为你展开✦&#x27;,                &#x27;好好享受这片刻的宁静吧。&#x27;,            ];            return randomItem(failureMessages);        &#125;        // 进入阅读模式        $body.classList.add(&#x27;read-mode&#x27;);        // 创建退出按钮        const newEle = document.createElement(&#x27;button&#x27;);        newEle.type = &#x27;button&#x27;;        newEle.className = &#x27;fas fa-sign-out-alt exit-readmode&#x27;;        const exitReadMode = () =&gt; &#123;            $body.classList.remove(&#x27;read-mode&#x27;);            newEle.remove();            newEle.removeEventListener(&#x27;click&#x27;, exitReadMode);        &#125;        newEle.addEventListener(&#x27;click&#x27;, exitReadMode);        $body.appendChild(newEle);        const successMessages = [            &#x27;✦静谧的阅读之梦，已为你开启✦&#x27;,            &#x27;已为你展开知识的画卷，静心阅读吧。&#x27;,            &#x27;欢迎来到知识的树洞，好好休息哦。&#x27;,        ];        return randomItem(successMessages);    &#125;    // ---------------------------------------------- aplayer 功能区 ------------------------------------    // 播放器实例的缓存    // 在使用了 PJAX 或 Turbolinks 等技术的 Hexo 博客中，页面切换时并不会完全重新加载，而是局部刷新    // window.aplayers 这个由 APlayer.js 初始化的数组，可能会在页面切换后被清空或重新计算    // 而播放器实例本身（如果你用的是全局播放器）其实并没有被销毁，还存在于内存中    tk.aplayer = null;    function getAPlayer() &#123;        // 1. 检查缓存是否存在且有效        // aplayer.container.isConnected 可以判断播放器的DOM元素是否还挂载在页面上        if (tk.aplayer &amp;&amp; tk.aplayer.container &amp;&amp; tk.aplayer.container.isConnected) &#123;            return tk.aplayer;        &#125;        // 2. 如果缓存无效或不存在，则尝试从 window.aplayers 寻找新的实例        if (Array.isArray(window.aplayers) &amp;&amp; window.aplayers.length &gt; 0) &#123;            // 找到第一个看起来正常的实例并缓存它            const ap = window.aplayers[0];            if (ap &amp;&amp; typeof ap.play === &#x27;function&#x27;) &#123;                tk.aplayer = ap; // 写入缓存                return tk.aplayer;            &#125;        &#125;        // 3. 如果两种方式都找不到，则返回 null        tk.aplayer = null; // 清理可能存在的无效缓存        return null;    &#125;    // OhMyLive2D 实例的缓存    tk.oml2d = null;    function getOml2d() &#123;        // 1. 检查缓存是否存在且有效        // oml2d.stage.el.isConnected 可以判断模型的舞台元素是否还挂载在页面上        if (tk.oml2d &amp;&amp; tk.oml2d.stage &amp;&amp; tk.oml2d.stage.el &amp;&amp; tk.oml2d.stage.el.isConnected) &#123;            return tk.oml2d;        &#125;        // 2. 如果缓存无效或不存在，则尝试从 window 寻找新的实例        // 通过检查 oml2d 对象和其核心方法 tipsMessage 是否存在，来判断实例是否可用        if (oml2d &amp;&amp; typeof oml2d.tipsMessage === &#x27;function&#x27;) &#123;            tk.oml2d = oml2d; // 写入缓存            return tk.oml2d;        &#125;        // 3. 如果两种方式都找不到，则返回 null        tk.oml2d = null; // 清理可能存在的无效缓存        return null;    &#125;    /**     * 随机播放音乐     */    tk.playRandomMusic = () =&gt; &#123;        // 1. 获取 aplayer 实例        const ap = getAPlayer();        if (!ap) &#123;            return &#x27;歌声的精灵好像还没抵达，再呼唤一下试试看？&#x27;;        &#125;        // 2. 从实例的歌曲列表中检查歌曲数量        let list = ap.list;        let audios = null;        if (!list || !(audios = list.audios) || audios.length === 0) &#123;            const failureMessages = [                &#x27;诶？知识的树洞里现在很安静呢…&#x27;,                &#x27;唔…今天的歌单好像藏起来了。&#x27;,                &#x27;旋律还在梦境里飘荡，暂时无法捕捉到呢。&#x27;,                &#x27;好像…播放列表里还没有可以分享的歌曲哦。&#x27;,            ];            return randomItem(failureMessages);        &#125;        // 3. 生成随机索引并切换歌曲        const songIdx = randomIndex(audios.length);        // 使用 API 切换到随机歌曲并播放        list.switch(songIdx);        ap.play();        // 4. 从歌曲对象中提取信息        const songObject = audios[songIdx];        const title = songObject.name;        const author = songObject.artist;        const info = `$&#123;title&#125; - $&#123;author&#125;`;        // 5. 返回随机消息        const successMessages = [            `「$&#123;info&#125;」的旋律从虚空传来~`,            `让「$&#123;info&#125;」为旅途伴奏吧`,            `小草神为你选了这首「$&#123;info&#125;」哦`,            `(✧∇✧) 这首「$&#123;info&#125;」最好听啦`        ];        return randomItem(successMessages);    &#125;    /**     * 暂停/播放音乐     */    tk.togglePlayPause = () =&gt; &#123;        // 1. 获取 aplayer 实例        const ap = getAPlayer();        if (!ap) &#123;            return &#x27;歌声的精灵好像还没抵达，再呼唤一下试试看？&#x27;;        &#125;        // ✨ 新增：判断如果播放器当前是暂停状态，则直接继续播放        if (ap.audio &amp;&amp; ap.audio.paused) &#123;            ap.play();            // 获取当前歌曲信息并返回提示            const currentSong = ap.list.audios[ap.list.index];            const info = `$&#123;currentSong.name&#125; - $&#123;currentSong.artist&#125;`;            const resumeMessages = [                `继续为你播放：「$&#123;info&#125;」`,                `让暂停的乐章继续为你奏响：「$&#123;info&#125;」`,                `旋律继续~ 正在播放「$&#123;info&#125;」`            ];            return randomItem(resumeMessages);        &#125;        // 2. 调用 API 停止播放        ap.pause();        // 3. 返回随机消息        const successMessages = [            &#x27;音乐精灵睡着啦~zzZ&#x27;,            &#x27;嘘...让世界安静一会儿&#x27;,            &#x27;按下暂停键的瞬间，听见了蒲公英的声音&#x27;,            &#x27;纳西妲把音符都收进小口袋啦&#x27;,        ];        return randomItem(successMessages);    &#125;    // 将所有相关的歌词同步状态都聚合到一个对象中，方便管理    const lyricSyncState = &#123;        observer: null,        lastLyric: &#x27;&#x27;,        isConnecting: false // 防止用户在连接过程中重复点击    &#125;;    // 创建一个返回 Promise 的函数来等待依赖加载    function waitForAPlayerAndOML2D(timeout = 30000) &#123;        return new Promise((resolve, reject) =&gt; &#123;            let intervalId = null;            const timeoutId = setTimeout(() =&gt; &#123;                clearInterval(intervalId);                reject(&#x27;唔…与梦境和旋律的连接好像中断了，它们藏到更深的地方去了。&#x27;);            &#125;, timeout);            intervalId = setInterval(() =&gt; &#123;                const ap = getAPlayer();                const oml2d = getOml2d();                if (ap &amp;&amp; oml2d) &#123;                    clearTimeout(timeoutId);                    clearInterval(intervalId);                    resolve(&#123;ap, oml2d&#125;); // 成功时，返回两个实例                &#125;            &#125;, 500);        &#125;);    &#125;    /**     * 开启歌词同步     */    tk.linkAPlayerToLive2D = () =&gt; &#123;        // 防止重复绑定        if (lyricSyncState.observer) &#123;            const messages = [                &#x27;旋律与梦境的连接很稳定，无需重复施法哦。&#x27;,                &#x27;嘘~ 我们已经在聆听这首歌的心跳了。&#x27;,                &#x27;虚空终端早已同步了这段旋律，静静欣赏吧。&#x27;,            ];            return randomItem(messages);        &#125;        // 防止在连接过程中重复点击        if (lyricSyncState.isConnecting) &#123;            return &#x27;正在努力连接中，请稍等哦~&#x27;;        &#125;        lyricSyncState.isConnecting = true;        // 使用 Promise 来处理异步等待        waitForAPlayerAndOML2D()            .then((&#123;ap, oml2d&#125;) =&gt; &#123;                const observer = () =&gt; &#123;                    // APlayer 当前高亮歌词的 class 是 .aplayer-lrc-current                    const currentLrcElement = document.querySelector(&#x27;.aplayer-lrc-current&#x27;);                    if (currentLrcElement) &#123;                        // 当前歌词                        const currentLyricText = currentLrcElement.innerText + &#x27; ~&#x27;;                        // 核心逻辑：只有当歌词文本发生变化时，才触发                        if (currentLyricText &amp;&amp; currentLyricText !== lyricSyncState.lastLyric) &#123;                            lyricSyncState.lastLyric = currentLyricText;       // 更新“上一句歌词”                            oml2d.tipsMessage(currentLyricText, 10000, 2);                        &#125;                    &#125;                &#125;                // 监听 aplayer 的 timeupdate 事件                ap.on(&#x27;timeupdate&#x27;, observer);                // 缓存 observer 用于解绑                lyricSyncState.observer = observer;                const successMessages = [                    &#x27;连接成功！现在，歌词也会在梦境中显现了✦&#x27;,                    &#x27;虚空已同步旋律，歌中的每个字句都不会错过了。&#x27;,                    &#x27;我听到啦，这就是这首歌想说的话语。&#x27;,                ];                oml2d.tipsMessage(randomItem(successMessages), 3000, 4);            &#125;)            .catch(err =&gt; &#123;                const oml2d = getOml2d();                if (oml2d) &#123;                    oml2d.tipsMessage(err, 3000, 4);                &#125; else &#123;                    console.error(err);                &#125;            &#125;)            .finally(() =&gt; &#123;                lyricSyncState.isConnecting = false;            &#125;);        const attemptMessages = [            &#x27;正在编织旋律与梦境的丝线，请稍等片刻…&#x27;,            &#x27;请稍候，我正在读取这首歌的记忆。&#x27;,            &#x27;风正在捎来歌词的低语，侧耳倾听…&#x27;,        ];        return randomItem(attemptMessages);    &#125;    tk.linkAPlayerToLive2D();    /**     * 关闭歌词同步功能     */    tk.unlinkAPlayerToLive2D = () =&gt; &#123;        const ap = getAPlayer();        if (ap &amp;&amp; lyricSyncState.observer) &#123;            // 从 aplayer 实例上移除事件监听            // 检查 timeupdate 事件的监听器数组是否存在            if (Array.isArray(ap.events.events.timeupdate)) &#123;                // 使用 filter 创建一个新数组，其中不包含我们要移除的 observer 函数                ap.events.events.timeupdate = ap.events.events.timeupdate.filter(                    fn =&gt; fn !== lyricSyncState.observer                );            &#125;            // 重置状态            lyricSyncState.observer = null;            lyricSyncState.lastLyric = &#x27;&#x27;;            lyricSyncState.isConnecting = false;            const successMessages = [                &#x27;好的，旋律与梦境的丝线已经轻轻解开。&#x27;,                &#x27;歌声回归歌声，梦境回归梦境，一切归于宁静。&#x27;,                &#x27;已从虚空终端断开旋律同步。&#x27;,            ];            return randomItem(successMessages);        &#125;        const failureMessages = [            &#x27;诶？我们之间…好像本来就没有连接这条丝线呢。&#x27;,            &#x27;旋律一直都很安静地在自己歌唱，无需再让它停下哦。&#x27;,            &#x27;唔…虚空终端里，本来就没有在同步这段旋律呀。&#x27;,        ];        return randomItem(failureMessages);    &#125;    // ---------------------------------------------- hexo 功能区 ------------------------------------    // 创建一个变量来存储文章列表    let allPosts = [];    // 创建一个函数来加载文章数据    let isPostsLoaded = false;    function loadPostData() &#123;        // 使用 fetch API 请求生成的 json 文件        fetch(&#x27;/api/posts.json&#x27;)            .then(res =&gt; res.json())            .then(data =&gt; &#123;                if (data &amp;&amp; data.posts.length &gt; 0) &#123;                    allPosts = data.posts;                    isPostsLoaded = true;                    console.log(&#x27;文章列表加载成功！文章数量：&#x27; + allPosts.length);                &#125;            &#125;)            .catch(err =&gt; console.error(&#x27;加载文章列表失败：&#x27; ,err));    &#125;    loadPostData();    /**     * 随机跳转文章     */    tk.jump2randomPost = () =&gt; &#123;        if (!isPostsLoaded || 0 === allPosts.length) &#123;            loadPostData();            return &#x27;知识库正在同步中，请稍后再试哦…&#x27;;        &#125;        // 随机选取一篇文章        const post = randomItem(allPosts);        // 进行链接跳转        const url = `/$&#123;post.path&#125;`;        if (window.pjax || typeof window.Pjax === &#x27;function&#x27;) &#123;            // 使用 Pjax API 进行无刷新跳转            const _pjax = window.pjax || new window.Pjax();            _pjax.loadUrl(url);        &#125; else &#123;            // 使用 location.href 进行跳转            window.location.href = url;        &#125;        // 从消息池中随机选择一条消息并返回        const messages = [            `正在带你前往「$&#123;post.title&#125;」~`,            `从世界树的记忆里，为你找到了「$&#123;post.title&#125;」。`,            `欸嘿，我们来一场说走就走的知识旅行，目的地：「$&#123;post.title&#125;」！`,            `让「$&#123;post.title&#125;」的智慧之光照亮你的思绪吧。`,            `虚空终端检索到了新的知识：「$&#123;post.title&#125;」。`,            `瞧，我为你发现了宝藏！是「$&#123;post.title&#125;」哦。`,            `准备好哦，我们要进行一次小小的梦境跃迁，去往「$&#123;post.title&#125;」。`,            `连接到知识库…为你提取了「$&#123;post.title&#125;」。`,            `这篇「$&#123;post.title&#125;」里，或许藏着你想要的答案。`,            `页面航线已规划，下一站：「$&#123;post.title&#125;」。`        ];        return randomItem(messages);    &#125;&#125;随机文章功能，需要注册一个 hexo 生成器。\n脚本需要放在特定的位置下，/scripts/generator-posts.js。\ngenerator-posts.jshexo.extend.generator.register(&#x27;posts&#x27;, (locals) =&gt; &#123;    // locals.posts 包含了所有的文章数据    const allPosts = locals.posts.map(post =&gt; (&#123;        title: post.title,        path: post.path        // 你也可以在这里添加其他需要的信息, 例如：        // date: post.date,        // tags: post.tags.map(tag =&gt; tag.name)    &#125;));    // 定义输出的 JSON 对象    const output = &#123;        posts: allPosts,        total: allPosts.length    &#125;;    // 返回要生成的文件信息    // Hexo 会在 public 目录下创建 api/posts.json 文件    return &#123;        path: &#x27;api/posts.json&#x27;,        data: JSON.stringify(output)    &#125;;&#125;)\n这样，每次打包项目后，会生成 /public/api/posts.json 文件，存放所有的文章信息。\n脚本就是通过请求这个文件，来实现随机文章的效果。\n自定义样式_config.butterfly.ymlcustom-butterfly.csscustom-aside.css主题注入样式文件。\n_config.butterfly.ymlinject:  head:    - &lt;link rel=&quot;stylesheet&quot; href=&quot;/assets/css/custom-butterfly.css&quot; media=&quot;defer&quot; onload=&quot;this.media=&#x27;all&#x27;&quot;&gt;    - &lt;link rel=&quot;stylesheet&quot; href=&quot;/assets/css/custom-aside.css&quot; media=&quot;defer&quot; onload=&quot;this.media=&#x27;all&#x27;&quot;&gt;样式文件定义在：/assets/css/custom-butterfly.css\ncustom-butterfly.css/* 页脚透明 */#footer &#123;    background: transparent !important;&#125;/* 头图透明 */#page-header &#123;    background: transparent !important;&#125;/* top-img 黑色透明玻璃效果移除 */#page-header:not(.not-top-img):before &#123;    background-color: transparent !important;&#125;/* 魔改所需：时间轴生肖icon，导航栏菜单icon */svg.icon &#123;    /* 这里定义svg.icon，避免和Butterfly自带的note标签冲突 */    width: 1em;    height: 1em;    /* width和height定义图标的默认宽度和高度*/    vertical-align: -0.15em;    fill: currentColor;    overflow: hidden;&#125;/* 滚动条 */::-webkit-scrollbar &#123;    width: 8px;    height: 10px;&#125;::-webkit-scrollbar-thumb &#123;    background-color: #3b70fc;    border-radius: 2em;&#125;::-webkit-scrollbar-corner &#123;    background-color: transparent;&#125;::-moz-selection &#123;    color: #fff;    background-color: #3b70fc;&#125;/* 音乐播放器 *//* 隐藏底部的歌词 */.aplayer .aplayer-lrc &#123;  display: none !important;&#125;/* 箭头部分重定位 */.aplayer.aplayer-fixed.aplayer-narrow &#123;    left: 15px;    bottom: 15px;    /* 提升 z-index 以免被页面其他元素遮挡 */    z-index: 999;&#125;/* 默认隐藏播放器 */.aplayer.aplayer-fixed.aplayer-narrow .aplayer-body &#123;    /* 毛玻璃效果 */    background-color: rgba(45, 45, 45, 0.7);    backdrop-filter: saturate(180%) blur(20px);    -webkit-backdrop-filter: saturate(180%) blur(20px);    /* 边框与阴影 */    border: 1px solid rgba(255, 255, 255, 0.1);    border-radius: 12px;    box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.37);    /* 默认隐藏的动画效果 */    transform: translateX(-80px);    opacity: 0.5;    transition: all 0.5s cubic-bezier(0.25, 0.8, 0.25, 1);&#125;/* 鼠标悬停，弹出播放器 */.aplayer.aplayer-fixed.aplayer-narrow:hover .aplayer-body &#123;    transform: translateX(0);    opacity: 1;    box-shadow: 0 12px 40px 0 rgba(0, 0, 0, 0.5);&#125;/* H1-H6标题，图标转动起来 */h1::before, h2::before, h3::before,h4::before, h5::before, h6::before &#123;    -webkit-animation: ccc 1.6s linear infinite;    animation: ccc 1.6s linear infinite;&#125;@-webkit-keyframes ccc &#123;    0% &#123;        -webkit-transform: rotate(0deg);        transform: rotate(0deg);    &#125;    to &#123;        -webkit-transform: rotate(-1turn);        transform: rotate(-1turn);    &#125;&#125;@keyframes ccc &#123;    0% &#123;        -webkit-transform: rotate(0deg);        transform: rotate(0deg);    &#125;    to &#123;        -webkit-transform: rotate(-1turn);        transform: rotate(-1turn);    &#125;&#125;样式文件定义在：/assets/css/custom-aside.css\ncustom-aside.css/* 颜色 */:root &#123;    --anzhiyu-theme-op: #4259ef23;    --anzhiyu-gray-op: #9999992b;    --anzhiyu-theme-top: var(--anzhiyu-theme);    --anzhiyu-white: #fff;    --anzhiyu-white-op: rgba(255, 255, 255, 0.2);    --anzhiyu-black: #000;    --anzhiyu-black-op: rgba(0, 0, 0, 0.2);    --anzhiyu-none: rgba(0, 0, 0, 0);    --anzhiyu-gray: #999999;    --anzhiyu-yellow: #ffc93e;    --anzhiyu-border-radius: 8px;    --anzhiyu-main: var(--anzhiyu-theme);    --anzhiyu-main-op: var(--anzhiyu-theme-op);    --anzhiyu-shadow-theme: 0 8px 12px -3px var(--anzhiyu-theme-op);    --anzhiyu-shadow-main: 0 8px 12px -3px var(--anzhiyu-main-op);    --anzhiyu-shadow-blue: 0 8px 12px -3px rgba(40, 109, 234, 0.2);    --anzhiyu-shadow-white: 0 8px 12px -3px rgba(255, 255, 255, 0.2);    --anzhiyu-shadow-black: 0 0 12px 4px rgba(0, 0, 0, 0.05);    --anzhiyu-shadow-yellow: 0px 38px 77px -26px rgba(255, 201, 62, 0.12);    --anzhiyu-shadow-red: 0 8px 12px -3px #ee7d7936;    --anzhiyu-shadow-green: 0 8px 12px -3px #87ee7936;    --anzhiyu-shadow-border: 0 8px 16px -4px #2c2d300c;    --anzhiyu-shadow-blackdeep: 0 2px 16px -3px rgba(0, 0, 0, 0.15);    --anzhiyu-logo-color: linear-gradient(215deg, #4584ff 30%, #ff7676 70%);    --style-border: 1px solid var(--anzhiyu-card-border);    --anzhiyu-blue-main: #3b70fc;    --style-border-hover: 1px solid var(--anzhiyu-main);    --style-border-dashed: 1px dashed var(--anzhiyu-theme-op);    --style-border-avatar: 4px solid var(--anzhiyu-background);    --style-border-always: 1px solid var(--anzhiyu-card-border);    --anzhiyu-white-acrylic1: #fefeff !important;    --anzhiyu-white-acrylic2: #fcfdff !important;    --anzhiyu-black-acrylic2: #08080a !important;    --anzhiyu-black-acrylic1: #0b0b0e !important;    --anzhiyu-main-none: #b8b8b800 !important;&#125;[data-theme=&quot;light&quot;] &#123;    --anzhiyu-theme: #3b70fc;    --anzhiyu-theme-op: #4259ef23;    --anzhiyu-blue: #3b70fc;    --anzhiyu-red: #d8213c;    --anzhiyu-pink: #ff7c7c;    --anzhiyu-green: #57bd6a;    --anzhiyu-fontcolor: #363636;    --anzhiyu-background: #f7f9fe;    --anzhiyu-reverse: #000;    --anzhiyu-maskbg: rgba(255, 255, 255, 0.6);    --anzhiyu-maskbgdeep: rgba(255, 255, 255, 0.85);    --anzhiyu-hovertext: var(--anzhiyu-theme);    --anzhiyu-ahoverbg: #f7f7fa;    --anzhiyu-lighttext: var(--anzhiyu-main);    --anzhiyu-secondtext: rgba(60, 60, 67, 0.6);    --anzhiyu-scrollbar: rgba(60, 60, 67, 0.4);    --anzhiyu-card-btn-bg: #edf0f7;    --anzhiyu-post-blockquote-bg: #fafcff;    --anzhiyu-post-tabs-bg: #f2f5f8;    --anzhiyu-secondbg: #edf0f7;    --anzhiyu-shadow-nav: 0 5px 12px -5px rgba(102, 68, 68, 0.05);    --anzhiyu-card-bg: #fff;    --anzhiyu-shadow-lightblack: 0 5px 12px -5px rgba(102, 68, 68, 0);    --anzhiyu-shadow-light2black: 0 5px 12px -5px rgba(102, 68, 68, 0);    --anzhiyu-card-border: #c0c6d8;&#125;[data-theme=&quot;dark&quot;] &#123;    --global-bg: #191919;    --anzhiyu-theme: #0084ff;    --anzhiyu-theme-op: #0084ff23;    --anzhiyu-blue: #0084ff;    --anzhiyu-red: #ff3842;    --anzhiyu-pink: #ff7c7c;    --anzhiyu-green: #57bd6a;    --anzhiyu-fontcolor: #f7f7fa;    --anzhiyu-background: #18171d;    --anzhiyu-reverse: #fff;    --anzhiyu-maskbg: rgba(0, 0, 0, 0.6);    --anzhiyu-maskbgdeep: rgba(0, 0, 0, 0.85);    --anzhiyu-hovertext: #0a84ff;    --anzhiyu-ahoverbg: #fff;    --anzhiyu-lighttext: #f2b94b;    --anzhiyu-secondtext: #a1a2b8;    --anzhiyu-scrollbar: rgba(200, 200, 223, 0.4);    --anzhiyu-card-btn-bg: #30343f;    --anzhiyu-post-blockquote-bg: #000;    --anzhiyu-post-tabs-bg: #121212;    --anzhiyu-secondbg: #30343f;    --anzhiyu-shadow-nav: 0 5px 20px 0px rgba(28, 28, 28, 0.4);    --anzhiyu-card-bg: #1d1b26;    --anzhiyu-shadow-lightblack: 0 5px 12px -5px rgba(102, 68, 68, 0);    --anzhiyu-shadow-light2black: 0 5px 12px -5px rgba(102, 68, 68, 0);    --anzhiyu-card-border: #42444a;&#125;/* 渐变动画定义 */@keyframes gradient &#123;    0% &#123;        background-position: 0 50%;    &#125;    50% &#123;        background-position: 100% 50%;    &#125;    100% &#123;        background-position: 0 50%;    &#125;&#125;/* 侧边栏，个人卡片，渐变色 */#aside-content &gt; .card-widget, #aside-content .card-webinfo &#123;    background: linear-gradient(135deg, #0a2463, #3e5c9a, #7cb8d1);    background-size: 400%;    box-shadow: 0 0 12px 4px rgba(0, 0, 0, 0.05);    animation: gradient 15s ease infinite;    position: relative;    color: #b9ed9b;    text-shadow: 0 1px 3px rgba(0,0,0,0.3)&#125;/* 侧边栏，个人卡片，社交图标颜色 */.site-data &gt; a .headline, .site-data &gt; a .length-num, .card-info-social-icons i &#123;    color: #b9ed9b !important;&#125;/* 侧边栏，网站信息卡片，渐变色 */#aside-content .card-webinfo &#123;    background: linear-gradient(135deg, #2d0b59, #6a3093, #a044ff);    background-size: 400%;    box-shadow: 0 0 12px 4px rgba(0, 0, 0, 0.05);    animation: gradient 15s ease infinite;    position: relative;    color: #40f4d9;    text-shadow: 0 1px 3px rgba(0,0,0,0.3)&#125;/* 侧边栏，分类卡片 */#aside-content .card-categories ul.card-category-list &gt; .card-category-list-item a:hover &#123;    color: var(--anzhiyu-white);    background-color: var(--anzhiyu-theme);    box-shadow: var(--anzhiyu-shadow-theme);    border-radius: 8px;    padding-left: 0.5rem;    padding-right: 0.5rem;&#125;/* 侧边栏，标签卡片 */#aside-content .card-tag-cloud a &#123;    color: var(--anzhiyu-fontcolor) !important;    font-size: 1.05rem !important;    border-radius: 8px;    display: inline-block;    margin-right: 4px;&#125;#aside-content .card-tag-cloud a:hover &#123;    background: var(--anzhiyu-theme);    color: var(--anzhiyu-white) !important;    box-shadow: var(--anzhiyu-shadow-theme);&#125;@media screen and (min-width: 1300px) &#123;    #aside-content .card-tag-cloud a:hover &#123;        transform: scale(1.03);    &#125;    #aside-content .card-tag-cloud a:active &#123;        transform: scale(0.97);    &#125;&#125;#aside-content .card-tag-cloud a sup &#123;    opacity: 0.4;    margin-left: 2px;&#125;/* 侧边栏，归档卡片 */span.card-archive-list-count &#123;    width: auto;    text-align: left;    font-size: 1.5rem;    line-height: 0.9;    font-weight: 700;&#125;.card-archive-list-count-group &#123;    display: flex;    flex-direction: row;    align-items: baseline;&#125;#aside-content .card-archives ul.card-archive-list &gt; .card-archive-list-item a span:last-child &#123;    width: fit-content;    margin-left: 4px;&#125;span.card-archive-list-count &#123;    width: auto;    text-align: left;    font-size: 1.1rem;    line-height: 0.9;    font-weight: 700;&#125;.card-archive-list-date &#123;    font-size: 14px;    opacity: 0.6;&#125;li.card-archive-list-item &#123;    width: 100%;    flex: 0 0 48%;&#125;#aside-content .card-archives ul.card-archive-list &gt; .card-archive-list-item a:hover &#123;    color: var(--anzhiyu-white);    background-color: var(--anzhiyu-theme);    box-shadow: var(--anzhiyu-shadow-theme);    border-radius: 8px;    padding-left: 0.5rem;    padding-right: 0.5rem;&#125;@media screen and (min-width: 1300px) &#123;    #aside-content .card-archives ul.card-archive-list &gt; .card-archive-list-item a:hover &#123;        transform: scale(1.03);    &#125;    #aside-content .card-archives ul.card-archive-list &gt; .card-archive-list-item a:active &#123;        transform: scale(0.97);    &#125;&#125;#aside-content .card-archives ul.card-archive-list &gt; .card-archive-list-item a &#123;    border-radius: 8px;    margin: 4px 0;    display: flex;    flex-direction: column;    align-content: space-between;    border: var(--style-border);&#125;#aside-content .card-archives ul.card-archive-list &gt; .card-archive-list-item a span:first-child &#123;    width: auto;    flex: inherit;&#125;#aside-content .card-archives ul.card-archive-list &#123;    display: flex;    flex-direction: row;    justify-content: space-between;    flex-wrap: wrap;&#125;#aside-content .card-archives ul.card-archive-list &gt; .card-archive-list-item span.card-archive-list-count &#123;    height: 30px;    margin-top: 5px;&#125;/* 侧边栏，最近文章卡片 */#aside-content .aside-list &gt; .aside-list-item .content &gt; time &#123;    display: none;&#125;#aside-content .aside-list &gt; .aside-list-item .content &gt; .title &#123;    -webkit-line-clamp: 3;    font-weight: 700;    padding: 2px 0;&#125;#aside-content .aside-list &gt; .aside-list-item &#123;    padding: 8px;    padding-top: 6px !important;    padding-bottom: 6px !important;    border-radius: 12px;    transition: 0.3s;    margin: 4px 0;    cursor: pointer;&#125;@media screen and (min-width: 1300px) &#123;    #aside-content .aside-list &gt; .aside-list-item:hover &#123;        transform: scale(1.03);    &#125;    #aside-content .aside-list &gt; .aside-list-item:active &#123;        transform: scale(0.97);    &#125;&#125;#aside-content .aside-list &gt; .aside-list-item:hover .thumbnail &gt; img &#123;    transform: scale(1);&#125;#aside-content .aside-list &gt; .aside-list-item:not(:last-child) &#123;    border-bottom: 0 dashed var(--anzhiyu-background) !important;&#125;#aside-content .aside-list &gt; .aside-list-item .thumbnail &#123;    border-radius: 8px;    border: var(--style-border);&#125;#aside-content .aside-list &gt; .aside-list-item:hover &#123;    background: var(--anzhiyu-blue-main);    color: var(--anzhiyu-white);    transition: 0.3s;    box-shadow: var(--anzhiyu-shadow-main);&#125;#aside-content .aside-list &gt; .aside-list-item:hover a &#123;    color: var(--anzhiyu-white) !important;&#125;.card-widget.card-recent-post &#123;    padding: 0.4rem 0.6rem !important;&#125;\n魔改主题源码侧边栏标签/归档给标签卡片，增加上标数字，对应的文章数字。\n给归档卡片，增加 篇 字，适配自定义样式的侧边栏。\npage.jsaside_archives.js修改源码文件，/themes/butterfly/scripts/helper/page.js。\npage.js- return `&lt;a href=&quot;$&#123;env.url_for(tag.path)&#125;&quot; style=&quot;$&#123;style&#125;&quot;&gt;$&#123;tag.name&#125;&lt;/a&gt;`+ return `&lt;a href=&quot;$&#123;env.url_for(tag.path)&#125;&quot; style=&quot;$&#123;style&#125;&quot;&gt;$&#123;tag.name&#125;&lt;sup&gt;$&#123;tag.length&#125;&lt;/sup&gt;&lt;/a&gt;`修改源码文件，/themes/butterfly/scripts/helper/aside_archives.js。\naside_archives.js- $&#123;showCount ? `&lt;span class=&quot;card-archive-list-count&quot;&gt;$&#123;item.count&#125;&lt;/span&gt;` : &#x27;&#x27;&#125;+ $&#123;showCount ? `&lt;span class=&quot;card-archive-list-count&quot;&gt;$&#123;item.count&#125; 篇&lt;/span&gt;` : &#x27;&#x27;&#125;\n最近文章卡片首页，移除侧边栏的 最近文章 卡片，只在文章页面显示。\n修改源码文件，/themes/butterfly/layout/includes/widget/index.pug。\nindex.pug  .sticky_layout    if showToc      include ./card_post_toc.pug-   !=partial(&#x27;includes/widget/card_recent_post&#x27;, &#123;&#125;, &#123;cache: true&#125;)\n时间轴生肖给 archives 文章归档页面的时间轴，年份增加生肖图标。\n需要引入阿里图标 js 文件，以及自定义样式的 svg.icon 样式。\nhelper-timeline-year.jsarticle-sort.pug注册辅助函数，需要放在特定位置下，/scripts/helper-timeline-year.js。\nhelper-timeline-year.js/** 用于时间轴魔改，追加年份图标。* 一些辅助函数，帮助计算。* */// 输入年份，返回生肖的图标名称hexo.extend.helper.register(&quot;getAnimalIcon&quot;, function (year) &#123;    let symbol = shengxiao(year);    return iconMap[symbol];&#125;);// 输入年份，返回 [天干的图标名称, 地支的图标名称]hexo.extend.helper.register(&quot;getTianGanDiZhiIcon&quot;, function (year) &#123;    let symbols = tiangandizhi(year);    let tg = iconMap[symbols.charAt(0)];    let dz = iconMap[symbols.charAt(1)];    return [tg, dz];&#125;)// 天干（10）const table1 = [    &#x27;甲&#x27;, &#x27;乙&#x27;, &#x27;丙&#x27;, &#x27;丁&#x27;, &#x27;戊&#x27;, &#x27;己&#x27;, &#x27;庚&#x27;, &#x27;辛&#x27;, &#x27;壬&#x27;, &#x27;癸&#x27;]// 地支（12）const table2 = [    &#x27;子&#x27;, &#x27;丑&#x27;, &#x27;寅&#x27;, &#x27;卯&#x27;, &#x27;辰&#x27;, &#x27;巳&#x27;, &#x27;午&#x27;, &#x27;未&#x27;, &#x27;申&#x27;, &#x27;酉&#x27;, &#x27;戌&#x27;, &#x27;亥&#x27;]// 天干地支组合（60）const table3 = []let i = 0, j = 0;while (true) &#123;    table3.push(table1[i++] + table2[j++]);    if (i === table1.length &amp;&amp; j === table2.length) &#123;        break;    &#125;    i = i % table1.length;    j = j % table2.length;&#125;// 十二生肖const table4 = [    &#x27;鼠&#x27;, &#x27;牛&#x27;, &#x27;虎&#x27;, &#x27;兔&#x27;, &#x27;龙&#x27;, &#x27;蛇&#x27;, &#x27;马&#x27;, &#x27;羊&#x27;, &#x27;猴&#x27;, &#x27;鸡&#x27;, &#x27;狗&#x27;, &#x27;猪&#x27;]// 图标映射，需要引入 阿里图标const iconMap = &#123;    &#x27;甲&#x27;: &#x27;icon-jia&#x27;, &#x27;乙&#x27;: &#x27;icon-yi&#x27;, &#x27;丙&#x27;: &#x27;icon-bing&#x27;, &#x27;丁&#x27;: &#x27;icon-ding&#x27;, &#x27;戊&#x27;: &#x27;icon-wu&#x27;,    &#x27;己&#x27;: &#x27;icon-ji&#x27;, &#x27;庚&#x27;: &#x27;icon-geng&#x27;, &#x27;辛&#x27;: &#x27;icon-xin&#x27;, &#x27;壬&#x27;: &#x27;icon-ren&#x27;, &#x27;癸&#x27;: &#x27;icon-gui&#x27;,    &#x27;子&#x27;: &#x27;icon-rat_zi&#x27;, &#x27;丑&#x27;: &#x27;icon-ox_chou&#x27;, &#x27;寅&#x27;: &#x27;icon-tiger_yin&#x27;, &#x27;卯&#x27;: &#x27;icon-rabbit_mao&#x27;,    &#x27;辰&#x27;: &#x27;icon-dragon_chen&#x27;, &#x27;巳&#x27;: &#x27;icon-snake_si&#x27;, &#x27;午&#x27;: &#x27;icon-horse_wu&#x27;, &#x27;未&#x27;: &#x27;icon-goat_wei&#x27;,    &#x27;申&#x27;: &#x27;icon-monkey_shen&#x27;, &#x27;酉&#x27;: &#x27;icon-rooster_you&#x27;, &#x27;戌&#x27;: &#x27;icon-dog_xu&#x27;, &#x27;亥&#x27;: &#x27;icon-boar_hai&#x27;,    &#x27;鼠&#x27;: &#x27;icon-rat&#x27;, &#x27;牛&#x27;: &#x27;icon-ox&#x27;, &#x27;虎&#x27;: &#x27;icon-tiger&#x27;, &#x27;兔&#x27;: &#x27;icon-rabbit&#x27;,    &#x27;龙&#x27;: &#x27;icon-dragon&#x27;, &#x27;蛇&#x27;: &#x27;icon-snake&#x27;, &#x27;马&#x27;: &#x27;icon-horse&#x27;, &#x27;羊&#x27;: &#x27;icon-goat&#x27;,    &#x27;猴&#x27;: &#x27;icon-monkey&#x27;, &#x27;鸡&#x27;: &#x27;icon-rooster&#x27;, &#x27;狗&#x27;: &#x27;icon-dog&#x27;, &#x27;猪&#x27;: &#x27;icon-boar&#x27;&#125;/** * 获取年份生肖 * * @param year 年份，例如 2025 * @returns &#123;string&#125; 生肖，比如 蛇 */function shengxiao(year) &#123;    let index = (parseInt(year) - 4) % 12;    return table4[index];&#125;/** * 获取年份的天干地支 * * @param year 年份，例如 2025 * @returns &#123;string&#125; 天干地支，例如 乙巳 */function tiangandizhi(year) &#123;    let index = (parseInt(year) - 4) % 60;    return table3[index];&#125;修改源码文件，/themes/butterfly/layout/includes/mixins/article-sort.pug\narticle-sort.pug  - const title = article.title || _p(&#x27;no_title&#x27;)+ // 魔改，计算年份图标 --------- start+ - const tgdz = getTianGanDiZhiIcon(tempYear)+ - let iconTg = &#x27;#&#x27; + tgdz[0];     // 甲乙丙丁...+ - let iconDz = &#x27;#&#x27; + tgdz[1];     // 子丑寅卯...+ - let iconAnimal = &#x27;#&#x27; + getAnimalIcon(tempYear);     // 鼠牛虎兔...+ // ------------------------- end  if tempYear !== year    - year = tempYear-     .article-sort-item.year= year+     // 魔改，增加年份图标 ------------ start+     .article-sort-item.year+       svg.icon.icon-tg(aria-hidden=&#x27;true&#x27;)+         use(xlink:href=iconTg)+       svg.icon.icon-dz(aria-hidden=&#x27;true&#x27;)+         use(xlink:href=iconDz)+       span.year-text= year+       svg.icon.icon-animal(aria-hidden=&#x27;true&#x27;)+         use(xlink:href=iconAnimal)+     // ---------------------------- end   .article-sort-item(class=noCoverClass)\n菜单彩色图标菜单彩色图标，需要引入阿里图标 js 文件，以及自定义样式的 svg.icon 样式。\n_config.butterfly.ymlmenu_item.pug导航栏的菜单，以前使用 fontawesome 图标的。\n现在支持使用 icon 彩色图标了，并且增加可配置动画效果（默认 faa-tada，在图标参数后面 || 动画参数）。\n_config.butterfly.ymlmenu:  首页: / || icon-shouye  文章 || icon-wenzhang:    时间轴: /archives/ || icon-shijianzhou    标签: /tags/ || icon-biaoqian    分类: /categories/ || icon-fenlei  收藏 || icon-shoucang:    照片: /gallery/ || icon-zhaopian    推荐: /link/ || icon-wodetuijian#    音乐: /music/ || icon-yunyinle#    电影: /movies/ || icon-dianying  留言板: /comments/ || icon-liuyanban  随笔: /shuoshuo/ || icon-wenji-suibi  关于: /about/ || icon-guanyu替换覆盖源码文件：/themes/butterfly/layout/includes/header/menu_item.pug。\nmenu_item.pugif theme.menu  .menus_items    - const default_animation = &#x27;faa-tada&#x27;    each value, label in theme.menu      if typeof value !== &#x27;object&#x27;        .menus_item          - const [link, icon, animation] = value.split(&#x27;||&#x27;).map(part =&gt; trim(part))          - const final_animation = animation || default_animation          a.site-page.faa-parent.animated-hover(href=url_for(link))            if icon.substring(0,2)===&#x27;fa&#x27;              i.fa-fw(class=icon + &#x27; &#x27; + final_animation)            else if icon.substring(0,4)===&#x27;icon&#x27;              svg.icon(aria-hidden=&quot;true&quot; class=final_animation)                use(xlink:href=`#`+ icon)            span= &#x27; &#x27; + label      else        .menus_item          - const [groupLabel, groupIcon, groupClass, groupAnimation] = label.split(&#x27;||&#x27;).map(part =&gt; trim(part))          - const final_animation = groupAnimation || default_animation          - const hideClass = groupClass === &#x27;hide&#x27; ? &#x27;hide&#x27; : &#x27;&#x27;          span.site-page.group.faa-parent.animated-hover(class=hideClass)            if groupIcon.substring(0,2)===&#x27;fa&#x27;              i.fa-fw(class=groupIcon + &#x27; &#x27; + final_animation)            else if groupIcon.substring(0,4)===&#x27;icon&#x27;              svg.icon(aria-hidden=&quot;true&quot; class=final_animation)                use(xlink:href=`#`+ groupIcon)            span= &#x27; &#x27; + groupLabel            i.fas.fa-chevron-down          ul.menus_item_child            each val, lab in value              - const [childLink, childIcon, animation] = val.split(&#x27;||&#x27;).map(part =&gt; trim(part))              - const final_animation = animation || default_animation              li                a.site-page.child.faa-parent.animated-hover(href=url_for(childLink))                  if childIcon.substring(0,2)===&#x27;fa&#x27;                    i.fa-fw(class=childIcon + &#x27; &#x27; + final_animation)                  else if childIcon.substring(0,4)===&#x27;icon&#x27;                    svg.icon(aria-hidden=&quot;true&quot; class=final_animation)                      use(xlink:href=`#`+ childIcon)                  span= &#x27; &#x27; + lab","categories":["Hexo博客"],"tags":["Hexo","Butterfly"]},{"title":"Hexo 博客搭建教程","url":"/posts/39541a22.html","content":"Hexo 是一款快速、简洁且高效的博客框架。本文记录了 Hexo 的搭建过程，使用最新版本的 hexo 8.0.0（2025-09-16 Released）。\n官网文档请看 文档 | Hexo\n环境要求\ngit\n\n版本无要求\n实际版本：git version 2.51.0.windows.1\n\n\nNodeJS\n\nHexo 7.0+，要求 NodeJS &gt;= 14.0.0\n实际版本：v24.8.0\n\n\n\n安装Hexo直接全局安装 hexo，方便使用。\nnpm install -g hexo-cli\n命令 hexo -v 有输出，代表安装成功。\n创建项目比如在 D:/Projects/ 下，运行以下命令：\n# 创建项目根目录，并初始化hexo init hexo-blog\n初始化成功，应当看到 D:/Projects/hexo-blog/ ，结构如下：\n\nscaffolds\ndraft.md\npage.md\npost.md\n\n\nsource\n_posts\n\n\nthemes\n_config.yml\npackage.json\n\n其中 _config.yml 是配置文件，/source/_posts/ 存放的是文章。\n启动项目# clean: 清理缓存以及静态文件hexo cl# generate: 生成静态文件hexo g# server: 本地启动项目# 默认端口 4000，可通过 -p 4001 指定端口hexo s\n启动后，访问 http://localhost:4000 即可访问博客网站。\n新建文章hexo new 第一篇文章\n运行上述命令，会在 /source/_posts/ 下生成文件 第一篇文章.md。这就是对应的文章了，是 markdown 格式的（Markdown 语法），在此进行文章的编辑。\nhexo g 命令，生成静态文件时，渲染引擎会将 .md 文章渲染成 HTML 页面。生成的所有资源，会放到自动生成的 /public/ 目录。\n文章的新增或修改，直接刷新网站页面，就可以看到效果，不需要重新启动项目。而修改配置文件，就需要重新启动项目。\n配置文件(可选)修改 _config.yml，进行个性化配置：\n_config.yml# Sitetitle: Gabriel的博客subtitle: &#x27;在代码与文字之间&#x27;description: &#x27;记录技术探索，也写人间烟火。&#x27;keywords: 编程,分享,生活author: Gabriellanguage: zh-CNtimezone: &#x27;Asia/Shanghai&#x27;# URL## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;url: https://lijiabao9.github.io\nsite 部分是网站的描述信息。\nurl 是以后公网部署的博客地址，后面会将博客部署到 GitHub Pages 上。\n一键部署到GitHub-Pages本地启动，只是为了看效果。最终博客还是需要部署到公网的。\nGitHub 提供了免费的 GitHub Pages，可进行网站托管。\n\n注册 GitHub 账号，比如我的用户名是 lijiabao9\n\n然后创建一个 public 的仓库，仓库名称为 lijiabao9.github.io （格式有要求，username.github.io）\n\n本地生成 SSH 公私钥，将公钥配置到 GitHub，才可以操作远程仓库\n 命令行执行 ssh-keygen -t rsa -C &quot;Your mail@example.com，连续三次回车后，在 ~/.ssh/ 下，会生成公私钥文件 id_rsa，id_rsa.pub ，文本编辑器打开公钥文件 id_rsa.pub，复制内容。\nGitHub 主页，Setting -&gt; SSH and GPG keys -&gt; SSH keys -&gt; new SSH key，Title 填写 Acer（这个可以任意填写，建议填写主机名称，方便区分）；Key type 保持默认的 Authentication Key；Key 粘贴复制的公钥内容；点击 Add SSH key 新增保存。\n\n\n配置文件 _config.yaml，增加仓库信息\n _config.yamldeploy:  type: &#x27;git&#x27;  repo: git@github.com:lijiabao9/lijiabao9.github.io.git  branch: main\n\n安装部署插件 hexo-deployer-git\n npm install hexo-deployer-git --save\n\n通过命令 hexo d （deploy）一键部署\n 这个命令，本质是先 clean 然后 generate，生成了 /public/ 静态资源文件； 将 /public/ 静态资源文件，上传到指定的 GitHub 仓库上； 由于仓库是 GitHub Pages，会将默认分支 main 进行部署（可在仓库的 Settings -&gt; Pages -&gt; Build and deployment，选择从 main 分支部署）； 等待部署完成后，访问 https://lijiabao9.github.io 就是博客网站了；\n\n\n自动推送部署由于后续项目体积会变大，每次执行 hexo d 命令的时间会变长。\n考虑将 hexo-blog 项目源码托管到 GitHub 上，给项目设置 GitHub Action，检测到分支代码有变更，自动打包推送到 Pages 仓库。\n\n在 GitHub 上新建一个 private 仓库，命名为 hexo-blog（可随意命名，就是一个普通的仓库）\n\n需要给 GitHub Action 提供一个 token，否则推送没权限\n GitHub 主页，Settings -&gt; Developer Settings -&gt; Personal access tokens -&gt; Token(classic) -&gt; Generate new token(classic)\nNote 填写 ‘Hexo 自动部署 Token’（这是备注可任意填写）；Expiration 选择 No expiration 永不过期；select scopes 勾选 repo 和 workflow；\n点击 Generate token 后，会将 token 只显示一次，复制保存下来。\n\n\n在本地 hexo-blog 项目，新建文件 /.github/workflows/autodeploy.yml，这是 action 工作流配置\n autodeploy.ymlname: 自动部署# 当有改动推送到 main 分支时，启动 Actionon:  push:    branches:      - main  release:    types:      - publishedjobs:  deploy:    runs-on: ubuntu-latest    steps:      - name: 检出分支        uses: actions/checkout@v5      - name: 安装 Node        uses: actions/setup-node@v5        with:          node-version: &quot;24.x&quot;      - name: 安装 Hexo        run: |          export TZ=&#x27;Asia/Shanghai&#x27;          npm install hexo-cli -g      - name: 安装依赖        run: |          npm ci      - name: 生成静态文件        run: |          hexo clean          hexo generate      - name: 部署到 GitHub Pages        uses: JamesIves/github-pages-deploy-action@v4        with:          token: ghp_XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX    # GitHub 账号创建的 token          repository-name: lijiabao9/lijiabao9.github.io     # GitHub Pages 仓库          branch: main                                       # GitHub Pages 仓库的分支          folder: public          # 可使用 $&#123;&#123; github.event.head_commit.message &#125;&#125; 获取 git 提交信息          commit-message: &quot;Updated By Github Actions&quot;\n 记得替换配置的 Pages 仓库信息，以及 token。\n\n将本地仓库，关联到远程仓库\n git remote add origin git@github.com:lijiabao9/hexo-blog.gitgit branch -M maingit push -u origin main\n 后面就只需要维护管理源码就可以了，打包部署工作自动完成。\n\n\nSEO优化插件(建议)hexo-abbrlink：将文章链接转为数字字母\nhexo-filter-nofollow：给所有超链接元素的 rel 属性，加上 nofollow 等值\nhexo-generator-feed：生成 atom.xml 文件，方便搜索引擎收录\nhexo-generator-sitemap：生成 sitemap.xml 文件，方便搜索引擎收录\n安装命令：\nnpm install hexo-abbrlink --savenpm install hexo-filter-nofollow --savenpm install hexo-generator-feed --savenpm install hexo-generator-sitemap --save\n在 _config.yml 增加插件配置：\n_config.ymlabbrlink:  alg: crc32      # Algorithm used to calc abbrlink. Support crc16(default) and crc32  rep: hex        # Representation of abbrlink in URLs. Support dec(default) and hex  drafts: false   # Whether to generate abbrlink for drafts. (false in default)  force: false    # Enable force mode. In this mode, the plugin will ignore the cache, and calc the abbrlink for every post even it already had an abbrlink. (false in default)  writeback: true # Whether to write changes to front-matters back to the actual markdown files. (true in default)nofollow:  enable: true    # Enable the plugin. (true in default)  field: site     # The scope you want the plugin to proceed, can be &#x27;site&#x27; or &#x27;post&#x27;. (&#x27;site&#x27; in default)  exclude:        # Exclude hostname. Specify subdomain when applicable, including www.#    - &#x27;exclude1.com&#x27;#    - &#x27;exclude2.com&#x27;feed:  enable: true                # Enables or disables this plugin. Enabled by default.  type: atom                  # Feed type. atom or rss2. Specify [&#x27;atom&#x27;, &#x27;rss2&#x27;] to output both types. (Default: atom)  path: atom.xml              # Feed path. When both types are specified, path must follow the order of type value.  limit: 20                   # Maximum number of posts in the feed (Use 0 or false to show all posts)  hub:                        # URL of the PubSubHubbub hubs (Leave it empty if you don&#x27;t use it)  content:                    # (optional) set to &#x27;true&#x27; to include the contents of the entire post in the feed.  content_limit: 140          # (optional) Default length of post content used in summary.  content_limit_delim: &#x27; &#x27;    # (optional) If content_limit is used to shorten post contents,  order_by: -date             # Feed order-by. (Default: -date)  icon: icon.png              # (optional) Custom feed icon. Defaults to a gravatar of email specified in the main config.  autodiscovery: true         # Add feed autodiscovery. (Default: true)  template:                   # Custom template path(s).sitemap:  path:               # Sitemap path. (Default: sitemap.xml)    - sitemap.xml  #  template: ./sitemap_template.xml  #  template_txt: ./sitemap_template.txt  rel: false          # Add rel-sitemap to the site&#x27;s header. (Default: false)  tags: true          # Add site&#x27;s tags  categories: true    # Add site&#x27;s categories\n","categories":["Hexo博客"],"tags":["Hexo"]},{"title":"IDM 安装破解","url":"/posts/3fdf137b.html","content":"日期：2025-10-15版本：6.42 Build 50 (Released 2025-10-07)\n参考文档：https://www.bilibili.com/opus/958689451272306720\n下载安装下载地址：https://www.internetdownloadmanager.com/\n\n双击下载的 exe 引导程序，完成安装：\n\n破解流程破解工具下载：https://pan.quark.cn/s/22d2df72fc05#/list/share\n运行破解工具，点击 【Crack】，等到按钮变成 【Ok】，点击 【Finish】即可。\n\n打开软件后，可以看到破解成功！！！\n\n检查更新更新升级后，破解会失效！\n需要重新破解。\n\n取消开机自启软件安装后，默认是开机自启的，可以取消。\n\n","categories":["软件安装"],"tags":["Software","IDM"]},{"title":"MySQL 压缩包安装","url":"/posts/8b39915a.html","content":"记录使用 压缩包 格式的安装。\n此方案的优势是，后续删除会很干净。\n下载压缩包下载地址：https://www.mysql.com/downloads/\n\n解压将下载得到的 zip 压缩包解压，放在路径 D:\\Program Files\\MySQL\\mysql-9.4.0-winx64，如图：\n\n配置文件新增 my.ini 配置文件，内容如下：\nmy.ini[mysql]# 设置 mysql 客户端的默认字符集default-character-set=utf8mb4[mysqld]# 设置服务端口port=3306# TODO: mysql的安装目录basedir=D:\\\\Program Files\\\\MySQL\\\\mysql-9.4.0-winx64# TODO: 数据库的数据存放目录datadir=D:\\\\Program Files\\\\MySQL\\\\mysql-9.4.0-winx64\\\\data# 允许的最大连接数max_connections=200# 设置服务器使用的字符集character-set-server=utf8mb4# 设置排序规则collation-server = utf8mb4_general_ci# 创建新表时使用的存储引擎default-storage-engine=InnoDB\n初始化在 bin 目录下，用命令提示符，执行命令：\nmysqld.exe --initialize --console\n\n这里生成的 root 用户密码，需要记一下。\n注册服务在 bin 目录下，用命令提示符（管理员），执行命令：\n最后一个参数 MySQL 是 windows 服务名称，可以任意填写\nmysqld.exe install MySQL\n\n服务管理方式一：命令提示符（管理员）# 启动服务net start MySQL# 停止服务net stop MySQL# 删除服务sc delete MySQL# 配置服务开机自启sc config MySQL start=auto\n\n方式二：任务管理器在 任务管理器 Ctrl + Shift + Esc 的服务, \n找到 MySQL 服务，鼠标右键点击选择 开启/停止 服务。\n\n修改初始密码初始化步骤生成的 root 用户密码，很是复杂，修改密码为 123456。\n在 bin 目录下，通过命令，连接到数据库，执行修改密码的 SQL 语句：\nmysql.exe -uroot -pALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;123456&#x27;\n\n干净卸载# 先停止服务net stop MySQL# 删除服务sc delete MySQL\n然后把目录 D:\\Program Files\\MySQL\\mysql-9.4.0-winx64 删除即可，非常干净。\n","categories":["软件安装"],"tags":["Software","MySQL"]},{"title":"Navicat 安装破解","url":"/posts/e2b31524.html","content":"日期：2025-10-16版本：17.3.5\n下载安装下载地址：https://www.navicat.com.cn/products\n\n双击下载的 exe 引导程序，完成安装：\n\n破解流程破解补丁下载：https://lijiabao.lanzoul.com/iXOen36l94hg\n\n首先，双击运行【无限试用Navicat.bat】脚本；\n然后，将补丁【winmm.dll】复制到 Navicat 的安装目录下。\n打开 Navicat 软件，没有弹出注册弹窗，就是破解成功！\n检查更新\n","categories":["软件安装"],"tags":["Software","Navicat"]},{"title":"PostgreSQL 压缩包安装","url":"/posts/922d9e90.html","content":"记录使用 压缩包 格式的安装。\n此方案的优势是，后续删除会很干净。\n下载压缩包下载地址：https://www.enterprisedb.com/download-postgresql-binaries\n\n解压将下载得到的 zip 压缩包解压，放在路径 D:\\Program Files\\PostgreSQL\\postgresql-17.6-2，如图：\n\n初始化在软件主目录下，用命令提示符，执行命令：\nbin\\initdb.exe -D data -U postgres -A password -E UTF8 --locale=C -W\n\n注册服务在软件主目录下，用命令提示符（管理员），执行命令：\nbin\\pg_ctl.exe register -N PostgreSQL -D &quot;D:\\Program Files\\PostgreSQL\\postgresql-17.6-2\\data&quot; -S auto\n\n服务管理方式一：命令提示符（管理员）# 启动服务net start PostgreSQL# 停止服务net stop PostgreSQL# 删除服务sc delete PostgreSQL# 配置服务开机自启sc config PostgreSQL start=demand\n\n方式二：任务管理器在 任务管理器 Ctrl + Shift + Esc 的服务,\n找到 PostgreSQL 服务，鼠标右键点击选择 开启/停止 服务。\n\n干净卸载# 先停止服务net stop PostgreSQL# 删除服务sc delete PostgreSQL\n然后把目录 D:\\Program Files\\PostgreSQL\\postgresql-17.6-2 删除即可，非常干净。\nPostGIS拓展安装此拓展后，数据库可支持空间函数。\n下载压缩包下载地址：https://download.osgeo.org/postgis/windows/\n\n解压解压后，放在 postgres 的同级目录下。\n\n运行脚本编辑脚本文件，makepostgisdb_using_extensions.bat：\n\n双击运行，脚本本质是将插件的依赖复制到 pg 安装目录，然后创建一个示例的空间数据库。\n如果脚本运行有报错：\ncould not load library “D:/Program Files/Postgresql/postgresql-17.6-2/lib/postgis-3.dll”:The specified module could not be found.\n\n手动将 postgis 插件下的 /bin, /gdal-data, /lib, /share 目录复制到 pg 目录下，重新执行脚本即可。\n空间函数在创建的示例空间库 example_postgis33 中，执行以下 sql 成功，表示插件安装成功。\nSELECT st_geogfromtext(&#x27;POINT(113 23)&#x27;)\n\n这时候，解压的 postgis 插件目录，就可以删除了！\n","categories":["软件安装"],"tags":["Software","PostgreSQL"]},{"title":"PowerShell7 安装和 Oh-My-Posh 美化界面","url":"/posts/891810e3.html","content":"Windows TerminalWin11 默认安装了 Windows Terminal （终端管理器）应用。\nwin + r 输入 wt 可快速打开应用。\n默认集成了：Prompt Command（命令提示符）、PowerShell（5.1）以及 Azure Cloud Shell。\n习惯配置在设置中配置，选中即复制、背景亚克力材质、配置可见性。\n\nPowerShell7安装对比系统默认安装的 PowerShell5.1，PowerShell7 功能更加强大。\n官方教程：https://learn.microsoft.com/zh-cn/powershell/scripting/install/installing-powershell-on-windows?view=powershell-7.5\n安装使用 winget 方式进行安装。\n如果提示找不到 winget 工具。在 powershell 中执行以下命令，重置 应用安装程序（此程序携带 winget 工具）：\nGet-AppxPackage Microsoft.DesktopAppInstaller | Reset-AppxPackage\n\n# 查看有哪些版本可以安装winget search Microsoft.PowerShell# 安装指定版本winget install --id Microsoft.PowerShell --source winget\n安装成功后，程序被安装在 C:/Program Files/PowerShell/7/ 目录，占用大约 278MB。\nwin + r 输入 pwsh 可快速打开应用。\n\n\n检查升级winget upgrade --id Microsoft.PowerShell\n集成到 wt 中\nShell 配置打开 ps7，输入 $PROFILE 查看终端配置文件位置（没有就新建）：\n\n设置终端使用代理：\nMicrosoft.PowerShell_profile.ps1# 设置代理$env:HTTP_PROXY = &quot;http://127.0.0.1:10808&quot;$env:HTTPS_PROXY = &quot;http://127.0.0.1:10808&quot;$env:ALL_PROXY = &quot;socks5://127.0.0.1:10808&quot;\n然后重新打开 ps7，或者 .$PROFILE 刷新配置。\nOh-My-Posh安装这是针对 shell 终端的美化工具。\n官方教程：https://ohmyposh.dev/docs/installation/windows\n安装通过 winget 安装，运行命令：\nwinget install JanDeDobbeleer.OhMyPosh --source winget --scope user --force\n\n\n检查升级winget upgrade --id JanDeDobbeleer.OhMyPosh\n字体下载美化后的界面主题，需要用到一些特定的字体。\n通过命令一键安装（不推荐）：\noh-my-posh font install meslo\n如果下载很慢，则是网络问题。使用上面的 ps7 终端，已经做了代理。\n这里有个天坑，字体安装，会将字体安装到用户级别下（~\\AppData\\Local\\Microsoft\\Windows\\Fonts），这里的文件是无法直接删除的，被核心进程 vcshost.exe 持有，此进程无法结束。\nwin + R 输入 regedit 打开注册表，地址输入：计算机\\HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Fonts删除对应的注册表项 Oh-My-Posh，删除此注册表项目后，就可以手动删除上述的字体目录了。\n\n推荐直接下载字体文件：https://lijiabao.lanzoul.com/iIkbj36pmegh将所有的 .tiff 字体文件，拖拽到 C:\\WINDOWS\\Fonts\\ 目录下，为全局安装字体。\n\n终端配置字体给 window terminal 配置默认字体为 MesloLGL Nerd Font。\n\nps7 美化修改 PS7 的 Shell 配置文件，添加以下命令：\nMicrosoft.PowerShell_profile.ps1# oh-my-posh 初始化（pwsh 是 powershell_7）oh-my-posh init pwsh --config &#x27;https://raw.githubusercontent.com/JanDeDobbeleer/oh-my-posh/main/themes/powerlevel10k_classic.omp.json&#x27; | Invoke-Expression\ninit 参数是终端的名称，可以通过在对应终端运行 oh-my-posh get shell 获取到。\nconfig 参数是主题配置，支持远程 json 文件，也可以是本地文件。\n在线主题效果预览：https://ohmyposh.dev/docs/themes/\n\n重新打开终端，或者 .$PROFILE 刷新配置，即可看到美化效果。\n\n","categories":["软件安装"],"tags":["Software","Powershell","Oh-My-Posh"]},{"title":"WSL2 安装开启","url":"/posts/ba5ff534.html","content":"借助适用于 Linux 的 Windows 子系统（WSL），可以在 Windows 计算机上同时访问 Windows 和 Linux。\n官方文档参考链接：https://learn.microsoft.com/zh-cn/windows/wsl/install\n开启 WSL 功能在 windows 功能里，开启 WSL 功能，重启计算机：\n\n成功后，命令 wsl -v 应有如下输出：\n\n通过命令 wsl --help 查看帮助命令。\nWSL 检查更新wsl --update\n安装系统管理查看可安装的系统wsl --list --online\n\n安装指定系统wsl --install Ubuntu\n\n设置默认系统wsl --set-default Ubuntu\n查看已安装的系统通过以下命令，可以查看已经安装了哪些系统（*号表示默认系统）：\nwsl --list -v\n启动指定的系统对于默认系统，可以直接通过 wsl 命令启动。\nwsl -d Ubuntu\n存储位置迁移安装的 Linux 系统，默认是会放到 C 盘。\n改为放到其他位置：\n# 关闭所有正在运行的系统wsl --shutdown# 创建临时目录mkdir D:\\tmp# 把 Ubuntu 系统导出到临时目录wsl --export Ubuntu D:\\tmp\\Ubuntu.tar# 删除 Ubuntu 系统wsl --unregister Ubuntu# 创建存储目录mkdir D:\\WslDistro# 将备份的 Ubuntu 系统导入wsl --import Ubuntu D:\\WslDistro D:\\tmp\\Ubuntu.tar\n环境变量独立进入安装的 Ubuntu 系统，环境变量默认会继承 Windows 宿主机的。\n进行变量隔离配置，编辑 Ubuntu 系统的 /etc/wsl.conf 文件，添加最后一行配置：\n/etc/wsl.conf[boot]systemd=true[user]default=gabriel[interop]appendWindowsPath=false\n应用宿主机代理当宿主机开启了网络代理后，默认 WSL 内部是不使用代理的。\n\n在 【开始】 菜单中，找到 【WSL Settings】，修改网络模式为 Mirrored：\n\n注意，修改后需要 wsl --shutdown 关闭所有运行系统，重启后才生效。\n","categories":["软件安装"],"tags":["Software","WSL"]},{"title":"Zsh 和 Oh-My-Zsh 美化","url":"/posts/a30910d1.html","content":"环境依赖在 Windows 安装 Zsh 终端，需要以 Git Bash 终端为基础。\n安装 Git 教程，参见 开发软件软件安装\nZsh 下载下载地址：https://packages.msys2.org/packages/zsh?repo=msys&amp;variant=x86_64\n\n下载得到 zsh-5.9-4-x86_64.pkg.tar 压缩包。\n解压 Zsh 到 git 目录将上述下载的解压包进行解压，需要连续两次解压。\n将解压后的文件，全部复制到 git 安装目录下：\n\n打开 Git Bash 终端，输入命令 zsh，出现如下则安装成功：\n\n输入 0，会创建 ~/.zshrc 文件并退出。\n设置 Git Bash 默认使用 Zsh现在每次打开 Git Bash 终端，默认还是 Bash 终端，而不是 Zsh。\n创建 Git Bash 的配置文件 ~/.bashrc，并写入以下内容：\nif [ -t 1 ]; then  exec zshfi\n\n这样，Git Bash 终端就会默认使用 Zsh 终端了。第一次可能有一个警告：大概是找不到 ~/bash_profile 等一些文件，会自动创建，可以忽略，以后不会再出现了。\n安装 Oh-My-Zsh在安装好 Zsh 终端之后，看起来跟 Bash 终端并无太大的区别。\nOh My Zsh 可以用于管理 Zsh 配置。它捆绑了数千个有用的功能、助手、插件、主题等。\nsh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;\n出现以下的内容，表示安装成功。\n\nZsh 主题配置Oh My Zsh 安装后，默认使用主题是 robbyrussell，可以修改 ~/.zshrc 配置中的 ZSH_THEME 字段修改主题。\n在线主题预览：https://github.com/ohmyzsh/ohmyzsh/wiki/Themes\n例如：ZSH_THEME=”ys”\nZsh 代理配置配置文件 ~/.zshrc 中添加以下内容：\n~/.zshrc# === 代理设置（简洁版） ===# 基础代理地址PROXY_HTTP=&quot;http://127.0.0.1:10808&quot;PROXY_SOCKS=&quot;socks5://127.0.0.1:10808&quot;# 开启代理proxy_on() &#123;  local vars=(http_proxy https_proxy HTTP_PROXY HTTPS_PROXY)  for v in &quot;$&#123;vars[@]&#125;&quot;; do    export $v=&quot;$PROXY_HTTP&quot;  done  export all_proxy=&quot;$PROXY_SOCKS&quot;  export ALL_PROXY=&quot;$PROXY_SOCKS&quot;  echo &quot;🌐 Proxy enabled → $PROXY_HTTP&quot;&#125;# 关闭代理proxy_off() &#123;  unset http_proxy https_proxy all_proxy HTTP_PROXY HTTPS_PROXY ALL_PROXY  echo &quot;❌ Proxy disabled&quot;&#125;# 查看代理状态proxy_status() &#123;  if [[ -n &quot;$http_proxy&quot; ]]; then    echo &quot;✅ Proxy ON ($http_proxy)&quot;  else    echo &quot;🚫 Proxy OFF&quot;  fi&#125;# 每次打开 Zsh，自动打开代理proxy_on\nZsh 插件安装zsh-autosuggestionszsh-autosuggestions 插件，可以在历史指令中找到与当前输入指令匹配的记录，并高亮显示，如果想直接使用，可以直接通过右方向键补全。\ncd ~/.oh-my-zsh/custom/pluginsgit clone https://github.com/zsh-users/zsh-autosuggestions $&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;/plugins/zsh-autosuggestions\n修改 ~/.zshrc 启用插件：\n~/.zshrcplugins=(git zsh-autosuggestions)# 历史命令补全，高亮色配置# ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE=&quot;fg=#cba6f7,bold&quot;\nzsh-syntax-highlightingzsh-syntax-highlighting 是 zsh 的语法高亮插件，如果输入的命令不存在，或者输入 shell 语法不正确，将会自动以红色表示。\ncd ~/.oh-my-zsh/custom/pluginsgit clone https://github.com/zsh-users/zsh-syntax-highlighting $&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;/plugins/zsh-syntax-highlighting\n修改 ~/.zshrc 启用插件：\n~/.zshrcplugins=(git zsh-syntax-highlighting)","categories":["软件安装"],"tags":["Software","Zsh","Oh-My-Zsh"]},{"title":"常用软件安装","url":"/posts/d8ebff22.html","content":"Shadowsocks翻墙代理软件。\n已经停止更新了！最后更新时间是 2022-02-08 ！\n下载解压下载地址：https://github.com/shadowsocks/shadowsocks-windows/releases\n\n流量伪装插件有时候，需要配合流量伪装插件使用。\nv2ray-plugin 插件下载地址：https://github.com/shadowsocks/v2ray-plugin/releases\n\nV2rayN翻墙代理软件。\n下载解压下载地址：https://github.com/2dust/v2rayN/releases\n\n习惯配置\n7zip压缩软件。\n下载安装下载地址：https://www.7-zip.org/download.html\n\n双击下载的 exe 引导程序，完成安装：\n\nEverything强大的文件搜索工具。\n下载安装下载地址：https://www.voidtools.com/zh-cn/downloads/\n\n双击下载的 exe 引导程序，完成安装：\n\n习惯配置快捷键设置为 Ctrl + Shift + F\n\n\nSnipaste强大的截图贴图软件。\n快捷键：F1截图，F3贴图\n下载解压下载地址：https://zh.snipaste.com/\n\n开机自启&amp;自动更新\nWinDirStat磁盘空间分析工具。\n下载安装下载地址：https://windirstat.net/download.html\n\n双击下载的 exe 引导程序，完成安装：\n\nGeekUninstaller强大的软件卸载工具。\n下载解压下载地址：https://geekuninstaller.com/\n\nWiseRegCleaner注册表清理工具。\n下载安装下载地址：https://www.wisecleaner.com/wise-registry-cleaner.html\n\n双击下载的 exe 引导程序，完成安装：\n\nPotPlayer视频播放器。\n下载安装下载地址：https://potplayer.daum.net/\n\n双击下载的 exe 引导程序，完成安装：\n\n检查更新\nFlashBrowser支持 Flash 的迷你浏览器。\n下载解压下载地址：https://github.com/Mzying2001/CefFlashBrowser/releases\n\nRustDesk开源的远程控制工具。\n下载安装下载地址：https://github.com/rustdesk/rustdesk/releases\n\n下载后，运行便携版，点击左侧的安装，完成安装：\n\n自动更新软件安装完成后，默认是会开机自启的。配置自动更新：\n\n设置固定密码\nPicGo图床管理工具。\n下载安装下载地址：https://github.com/Molunerfinn/PicGo/releases\n\n双击下载的 exe 引导程序，完成安装：\n\n习惯配置快捷键设置为 Ctrl + Shift + G \n开机自启、自动更新、时间戳重命名等；\n\n插件安装安装 webp 插件，上传图片前将其转为 .webp 格式，对图片进行压缩。\n\nSteam游戏平台。\n下载安装下载地址：https://store.steampowered.com/about/\n\n双击下载的 exe 引导程序，完成安装：\n\n游戏安装目录修改\n\n检查更新\nWeCome企业微信。\n下载安装下载地址：https://work.weixin.qq.com/\n\n双击下载的 exe 引导程序，完成安装：\n\n存储位置修改\n","categories":["软件安装"],"tags":["Software"]},{"title":"开发软件安装","url":"/posts/28085396.html","content":"Git代码版本管理工具。\n下载安装下载地址：https://git-scm.com/downloads\n\n双击下载的 exe 引导程序，完成安装：\n\n剩下的保持默认，一路点击 next 安装。\n\n命令 git -v 有输出，表示安装成功。\n\n检查更新git update-git-for-windows\n用户配置git config --global user.name &#x27;你的用户名&#x27;git config --global user.email &#x27;你的邮箱地址&#x27;\nMavenJAVA 项目的自动化构建工具。\n下载解压下载地址：https://maven.apache.org/download.cgi\n\n配置系统变量为了方便使用，建议将可执行文件的路径，添加到系统环境变量：\n\n执行命令 mnv -v 有输出，表示配置成功：\n\nPython install managerPython 版本管理器。\n下载安装下载地址：https://www.python.org/downloads\n\n双击下载的 exe 引导程序，完成安装：\n\n版本管理# 查看帮助py help# 查看已经安装的python版本py list# 启动指定版本的 pythonpy -V:&lt;TAG&gt;# 安装指定版本的 pythonpy install &lt;TAG&gt;# 卸载执行版本的 pythonpy uninstall &lt;TAG&gt;\n安装的各个版本 python，默认存放位置在：~\\AppData\\Local\\Python\n直接 py 或者 python 启动默认版本的 python。\nNvmnodejs version manager，即 nodejs 版本管理器。\n下载安装下载地址：https://github.com/coreybutler/nvm-windows/releases\n\n双击下载的 exe 引导程序，完成安装：\n\n安装后，环境变量可能会重复。\n即用户变量中，定义了 NVM_HOME 和 NVM_SYMLINK 变量，Path 会引入这两个变量。\n而系统变量中，重复定义上述变量和引入。\n删除掉重复的。\n检查更新nvm upgrade\n版本管理# 查看帮助nvm help# 查看安装了哪些版本nvm list# 激活指定版本nvm use &lt;TAG&gt;# 查看可安装的版本nvm list available# 安装最新版本nvm install latest\n切换 nodejs 版本，可能会报错：\n\n使用 命令提示符（管理员）执行 nvm use &lt;TAG&gt; 命令。\nXShell 和 XFtp服务器远程连接，文件传输工具。\n下载安装下载地址：https://www.xshell.com/zh/free-for-home-school/\n\n双击下载的 XShell 引导程序，完成安装：\n\n双击下载的 XFtp 引导程序，完成安装：\n\n自动检查更新\n\nRedisInsightRedis 连接工具。\n下载安装下载地址：https://redis.io/insight/\n\n双击下载的 exe 引导程序，完成安装：\n\n习惯配置日期显示格式设置。\n\nDocker Desktop镜像容器管理工具。\n需要系统开启 WSL 功能，参考我的文章：WSL2安装开启。\n下载安装下载地址：https://www.docker.com/products/docker-desktop/\n\n双击下载的 exe 引导程序，完成安装：\n默认是安装在 C 盘，且安装过程不提供自定义配置的。\n\n\n强制安装在 D 盘首先在 D 盘创建 2 个目录：\n\nD:\\Program Files\\Docker：Docker Desktop 的安装目录。\n\nD:\\Program Files\\Docker\\data：Docker 用于存储镜像、容器、卷等数据的目录\n\n\n打开命令提示符（管理员），进入到上述下载的 exe 引导程序所在目录，然后执行命令：\n命令行末换行 \\ 是为了方便展示，执行有问题的话，合并成一行命令执行。\n\nstart /w &quot;&quot; &quot;Docker Desktop Installer.exe&quot; install -accept-license \\ --installation-dir=&quot;D:\\Program Files\\Docker&quot; \\--wsl-default-data-root=&quot;D:\\Program Files\\Docker\\data&quot; \\--windows-containers-default-data-root=&quot;D:\\\\Program Files\\\\Docker&quot;\n参数解释：\n\n--installation-dir=&quot;D:\\Program Files\\Docker&quot;：指定 Docker Desktop 的安装目录。\n\n--wsl-default-data-root=&quot;D:\\Program Files\\Docker\\data&quot;：指定 WSL 存储 Docker 数据的目录。\n\n--windows-containers-default-data-root=&quot;D:\\\\Program Files\\\\Docker&quot;：注意双斜杠，用于 Windows 容器存储路径。\n\n\n执行命令后，会弹出之前的安装界面，等待安装完成即可。\n配置镜像加速需要注册登录 阿里云，\n搜索 容器镜像服务，按图所示，最终找到 镜像加速器，复制 加速器地址：\n\n然后运行 Docker 软件，打开设置，配置镜像加速：\n\n开启自启/检查更新可设置开机自启：\n\n可配置检查更新：\n\nOllama 安装本地大模型集成环境。\n下载安装包下载地址：https://ollama.com/download\n\n强制安装在 D 盘在 D 盘创建目录，D:/Ollama，把上面下载的 OllamaSetup.exe 引导程序放在这里。\n在命令提示符，执行命令：\nOllamaSetup.exe /DIR=D:\\Ollama\n\n安装完成后，Setup 引导程序就可以删除了。\n配置系统变量将 Ollama 的安装目录添加到系统变量 PATH 中，方便全局命令行使用。\n\n修改模型安装位置模型默认安装在 ~/.Ollama/models 下，修改位置。\n\n默认已是开机自启\n安装使用大模型查看可用模型：https://github.com/ollama/ollama?tab=readme-ov-file#model-library\n命令提示符，执行命令：\nollama run gemma3\n首次执行会去拉取下载模型。\n\n","categories":["软件安装"],"tags":["Software"]}]